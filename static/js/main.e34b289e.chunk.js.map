{"version":3,"sources":["Navigation/index.js","Home/index.js","Editor/TableEditor/EntryEditor/ValueEditor.js","Editor/TableEditor/EntryEditor/index.js","Editor/TableEditor/EntryModal.js","Editor/TableEditor/index.js","NotFoundView.js","Editor/index.js","View/Rolltable/index.js","Util/DiceUtil.js","View/Result/index.js","View/ResultModal/index.js","View/index.js","Login/index.js","Pages/index.js","App.js","firebase.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","this","props","authUser","role","onClick","firebase","doSignOut","Component","Home","_Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pages","inherits","createClass","key","value","_this2","unsubscribe","db","collection","where","orderBy","limit","onSnapshot","snapshot","forEach","data","push","objectSpread","id","setState","Row","Col","sm","span","offset","md","map","page","name","ValueEditor","handleTypeChange","bind","assertThisInitialized","handleTextChange","handleTargetTableChange","react","Form","Group","controlId","Label","Control","as","type","onChange","rows","text","targetTable","tables","table","e","onTypeChange","target","onTextChange","onTargetTableChange","EntryEditor","apply","arguments","range","onRangeChange","label","onLabelChange","values","Button","variant","onDeleteValue","aria-label","ValueEditor_ValueEditor","onAddValue","EntryModal","handleRangeChange","handleLabelChange","handleAddValue","handleDeleteValue","handleSaveEntry","handleValueTypeChange","handleValueTextChange","handleValueTargetTableChange","Modal","show","onHide","onEntryModalClose","Header","closeButton","Title","Body","EntryEditor_EntryEditor","Footer","concat","toConsumableArray","uuid","v4","valueId","window","confirm","updatedValues","filter","entry","onSaveEntry","tableId","typeValue","textValue","targetTableValue","DEFAULT_EDIT_ENTRY_PROPS","TableEditor","showEntryModal","editEntryProps","open","handleToggle","handleNameChange","handleHeaderChange","handleDiceFormulaChange","handleEntryModalShow","handleEntryModalClose","handleEntryClick","handleDeleteTable","handleDeleteEntry","Collapse","in","Table","responsive","striped","bordered","hover","diceFormula","header","entries","EntryModal_EntryModal","assign","getEntryModalProps","onNameChange","onHeaderChange","onDiceFormulaChange","entryId","find","en","onDeleteEntry","onDeleteTable","NotFoundView","EMPTY_PAGE","isPrivate","Editor","isLoading","saving","handlePageNameChange","handleAddTable","handleTableNameChange","handleExportPage","handleSavePage","handleDeletePage","handleIsPrivateChange","pageId","doc","exists","author_uid","uid","importPage","_this3","xs","FormGroup","FormLabel","FormControl","Check","checked","Card","TableEditor_TableEditor","NotFoundView_NotFoundView","updatedTables","newTable","entryIndex","findIndex","splice","updatedEntries","_this$state$page","exportData","created_at","objectWithoutProperties","dataStr","JSON","stringify","blob","Blob","FileSaver","saveAs","_this4","pagesRef","set","serverTimestamp","error","console","log","then","history","_this5","delete","withRouter","RollTable","handleRoll","ROLL_MIN","ROLL_MAX","getTable","matchingTables","length","tableValue","mode","result","rollResult","replace","toLowerCase","split","addition","subtractions","subtraction","dice","parseInt","numberOfDice","diceSize","i","Math","floor","random","reduce","acc","cur","input","min","max","parseRange","includes","entryValue","Result","_ref","ResultModal","Result_Result","View","showResultModal","handleEdit","handleHideResultModal","Rolltable_RollTable","ResultModal_ResultModal","rollTable","Login","LoginScreen","Pages","handleCreatePage","handleImportPage","htmlFor","accept","hidden","sort","b","fileList","files","file","reader","FileReader","readAsText","onload","jsonString","parse","onImportPage","App","PrivateRoute","component","rest","userSet","react_router","render","pathname","from","location","Create","Edit","Import","auth","onAuthStateChanged","Navigation_Navigation","Container","fluid","exact","path","src_Home","src_Login_0","src_Pages_0","src_Editor_0","_ref2","match","params","_ref3","src_View_0","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","uiConfig","signInSuccessUrl","signInOptions","FacebookAuthProvider","PROVIDER_ID","GoogleAuthProvider","TwitterAuthProvider","EmailAuthProvider","FirebaseContext","React","createContext","Firebase","signOut","react_firebaseui","firebaseAuth","initializeApp","firestore","FieldValue","ReactDOM","Provider","Consumer","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e34b289e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport './index.css';\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <NavLink to=\"/\" className=\"navbar-brand\"><i className=\"fas fa-dice-d20\"></i> Rolltables</NavLink>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    {this.props.authUser &&\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/pages\" className=\"nav-link\">Your Pages</NavLink>\r\n                        </li>\r\n                    }\r\n                </ul>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        {this.props.authUser ?\r\n                            <span role=\"button\" className=\"nav-logout nav-link\" onClick={this.props.firebase.doSignOut}>Logout</span>\r\n                            :\r\n                            <NavLink to=\"/login\" className=\"nav-link\">Login</NavLink>\r\n                        }\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nexport class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pages: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n            this.unsubscribe = this.props.firebase.db\r\n            .collection(\"pages\")\r\n            .where(\"isPrivate\", \"==\", false)\r\n            .orderBy(\"created_at\", \"desc\")\r\n            .limit(5)\r\n            .onSnapshot(snapshot => {\r\n                const pages = [];\r\n                snapshot.forEach(data => {\r\n                    pages.push({ ...data.data(), id: data.id });\r\n                });\r\n                this.setState({\r\n                    pages\r\n                });\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unsubscribe){\r\n            this.unsubscribe()\r\n          }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center\">\r\n                <h1>Welcome!</h1>\r\n                {!this.props.authUser ?\r\n                    <p>\r\n                        Check out the latest pages below or <Link to=\"/login\">login</Link> to start creating your own!\r\n                    </p>\r\n                    :\r\n                    <p>\r\n                        Check out the latest pages below or start <Link to=\"/pages\">creating your own!</Link>\r\n                    </p>\r\n                }\r\n                {this.state.pages && \r\n                    <Row className=\"center\">\r\n                    <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                        <h2>Latest Pages</h2>\r\n                        <div className=\"list-group\">\r\n                            {this.state.pages.map(page => {\r\n                                return (\r\n                                    <Link\r\n                                        key={page.id}\r\n                                        to={\"/view/\" + page.id}\r\n                                        className=\"list-group-item list-group-item-action\"\r\n                                    >\r\n                                        {page.name}\r\n                                    </Link>\r\n                                );\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component, Fragment } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport const VALUE_TYPE_TEXT = \"text\";\r\nexport const VALUE_TYPE_ROLL = \"roll\";\r\n\r\nexport class ValueEditor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleTypeChange = this.handleTypeChange.bind(this);\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleTargetTableChange = this.handleTargetTableChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Form.Group controlId=\"formGroupType\">\r\n                    <Form.Label>Type: </Form.Label>\r\n                    <Form.Control as=\"select\" value={this.props.value.type} onChange={this.handleTypeChange} >\r\n                        <option value={VALUE_TYPE_TEXT}>Text</option>\r\n                        <option value={VALUE_TYPE_ROLL}>Roll</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n              {this.props.value.type === \"text\" &&\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Text: </Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" value={this.props.value.text} onChange={this.handleTextChange} />\r\n                    </Form.Group>\r\n                }\r\n                {this.props.value.type === \"roll\" &&\r\n                    <Form.Group controlId=\"formGroupRoll\">\r\n                        <Form.Label>Table: </Form.Label>\r\n                        <Form.Control as=\"select\" value={this.props.value.targetTable} onChange={this.handleTargetTableChange}>\r\n                            {this.props.tables.map(table =>\r\n                                <option key={table.id} value={table.id} >{table.name}</option>\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    handleTypeChange(e) {\r\n        this.props.onTypeChange(this.props.value.id, e.target.value);\r\n    }\r\n\r\n    handleTextChange(e) {\r\n        this.props.onTextChange(this.props.value.id, e.target.value);\r\n    }\r\n\r\n    handleTargetTableChange(e) {\r\n        this.props.onTargetTableChange(this.props.value.id, e.target.value);\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { ValueEditor } from './ValueEditor';\r\n\r\nexport class EntryEditor extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Form.Group controlId=\"range\">\r\n                    <Form.Label>Range</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.props.range} onChange={this.props.onRangeChange} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"label\">\r\n                    <Form.Label>Label</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.props.label} onChange={this.props.onLabelChange} />\r\n                </Form.Group>\r\n                <hr />\r\n                {this.props.values && this.props.values.map(value =>\r\n                    <Fragment key={value.id}>\r\n                        <fieldset >\r\n                                <legend className=\"d-flex justify-content-between\">\r\n                                    Value\r\n                                    <Button\r\n                                    className=\"delete-value\"\r\n                                    variant=\"danger\"\r\n                                    onClick={this.props.onDeleteValue.bind(this, value.id)}\r\n                                    aria-label=\"Delete Value\"\r\n                                >&times;\r\n                            </Button>\r\n                            </legend>\r\n                            <ValueEditor\r\n                                value={value}\r\n                                tables={this.props.tables}\r\n                                onTypeChange={this.props.onTypeChange}\r\n                                onTextChange={this.props.onTextChange}\r\n                                onTargetTableChange={this.props.onTargetTableChange}\r\n                            />\r\n                        </fieldset>\r\n                        <hr />\r\n                    </Fragment>\r\n                )}\r\n                <Form.Group controlId=\"addEntry\">\r\n                    <Button onClick={this.props.onAddValue}>Add Value</Button>\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { EntryEditor } from \"./EntryEditor\";\r\nimport uuid from \"uuid\";\r\n\r\nexport class EntryModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      range: props.range,\r\n      values: props.values,\r\n      label: props.label\r\n    };\r\n\r\n    this.handleRangeChange = this.handleRangeChange.bind(this);\r\n    this.handleLabelChange = this.handleLabelChange.bind(this);\r\n    this.handleAddValue = this.handleAddValue.bind(this);\r\n    this.handleDeleteValue = this.handleDeleteValue.bind(this);\r\n    this.handleSaveEntry = this.handleSaveEntry.bind(this);\r\n    this.handleValueTypeChange = this.handleValueTypeChange.bind(this);\r\n    this.handleValueTextChange = this.handleValueTextChange.bind(this);\r\n    this.handleValueTargetTableChange = this.handleValueTargetTableChange.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show} onHide={this.props.onEntryModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{this.props.id ? \"Edit Entry\" : \"Add Entry\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <EntryEditor\r\n            range={this.state.range}\r\n            label={this.state.label}\r\n            values={this.state.values}\r\n            tables={this.props.tables}\r\n            onAddValue={this.handleAddValue}\r\n            onDeleteValue={this.handleDeleteValue}\r\n            onRangeChange={this.handleRangeChange}\r\n            onLabelChange={this.handleLabelChange}\r\n            onTypeChange={this.handleValueTypeChange}\r\n            onTextChange={this.handleValueTextChange}\r\n            onTargetTableChange={this.handleValueTargetTableChange}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.onEntryModalClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSaveEntry}>\r\n            {this.props.id ? \"Save Entry\" : \"Add Entry\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  handleRangeChange(e) {\r\n    //todo validate\r\n    this.setState({\r\n      range: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLabelChange(e) {\r\n    this.setState({\r\n      label: e.target.value\r\n    });\r\n  }\r\n\r\n  handleAddValue() {\r\n    this.setState({\r\n      values: [\r\n        ...this.state.values,\r\n        {\r\n          id: uuid.v4(),\r\n          type: \"text\",\r\n          text: \"\",\r\n          table: \"\"\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleDeleteValue(valueId) {\r\n    const confirm = window.confirm(\"Are you sure you want to delete this value?\");\r\n    if (confirm) {\r\n      const updatedValues = this.state.values.filter(value => {\r\n        return value.id !== valueId;\r\n      })\r\n      this.setState({\r\n        values: updatedValues\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSaveEntry() {\r\n    const entry = {\r\n      id: this.props.id ? this.props.id : uuid.v4(),\r\n      range: this.state.range,\r\n      label: this.state.label,\r\n      values: this.state.values\r\n    };\r\n    this.props.onSaveEntry(this.props.tableId, entry);\r\n    this.props.onEntryModalClose();\r\n  }\r\n\r\n  handleValueTypeChange(valueId, typeValue) {\r\n    const updatedValues = this.state.values.map(value => {\r\n      if (value.id === valueId) {\r\n        return { ...value, type: typeValue };\r\n      }\r\n      return value;\r\n    });\r\n    this.setState({\r\n      values: updatedValues\r\n    });\r\n  }\r\n\r\n  handleValueTextChange(valueId, textValue) {\r\n    const updatedValues = this.state.values.map(value => {\r\n      if (value.id === valueId) {\r\n        return { ...value, text: textValue };\r\n      }\r\n      return value;\r\n    });\r\n    this.setState({\r\n      values: updatedValues\r\n    });\r\n  }\r\n\r\n  handleValueTargetTableChange(valueId, targetTableValue) {\r\n    const updatedValues = this.state.values.map(value => {\r\n      if (value.id === valueId) {\r\n        return { ...value, targetTable: targetTableValue };\r\n      }\r\n      return value;\r\n    });\r\n    this.setState({\r\n      values: updatedValues\r\n    });\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Form, Button, Table, Collapse } from \"react-bootstrap\";\r\nimport { EntryModal } from \"./EntryModal\";\r\n\r\nconst DEFAULT_EDIT_ENTRY_PROPS = {\r\n    id: '',\r\n    range: [],\r\n    label: '',\r\n    values: [],\r\n}\r\n\r\nexport class TableEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showEntryModal: false,\r\n            editEntryProps: DEFAULT_EDIT_ENTRY_PROPS,\r\n            open: false,\r\n        };\r\n\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleHeaderChange = this.handleHeaderChange.bind(this);\r\n        this.handleDiceFormulaChange = this.handleDiceFormulaChange.bind(this);\r\n        this.handleEntryModalShow = this.handleEntryModalShow.bind(this);\r\n        this.handleEntryModalClose = this.handleEntryModalClose.bind(this);\r\n        this.handleEntryClick = this.handleEntryClick.bind(this);\r\n        this.handleDeleteTable = this.handleDeleteTable.bind(this);\r\n        this.handleDeleteEntry = this.handleDeleteEntry.bind(this);\r\n    }\r\n\r\n    getEntryModalProps() {\r\n        return {\r\n            show: this.state.showEntryModal,\r\n            tables: this.props.tables,\r\n            tableId: this.props.table.id,\r\n            onSaveEntry: this.props.onSaveEntry,\r\n            onEntryModalClose: this.handleEntryModalClose\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"d-flex\">\r\n                    <div\r\n                        className=\"table-title d-flex justify-content-between\"\r\n                        onClick={this.handleToggle}\r\n                    >\r\n                        <h5>{this.props.table.name}</h5>\r\n                        <i className={\"fas fa-chevron-\" + (this.state.open ? \"up\" : \"down\")} />\r\n                    </div>\r\n                </div>\r\n                <Collapse in={this.state.open}>\r\n                    <div className=\"table-container\">\r\n                    <Form>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Table Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={this.props.table.name}\r\n                                onChange={this.handleNameChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Table responsive striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <Form.Group controlId=\"diceFormula\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={this.props.table.diceFormula}\r\n                                                onChange={this.handleDiceFormulaChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </th>\r\n                                    <th>\r\n                                        <Form.Group controlId=\"header\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={this.props.table.header}\r\n                                                onChange={this.handleHeaderChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.table.entries && this.props.table.entries.map(entry => (\r\n                                    <tr key={entry.id} >\r\n                                        <td className=\"td-entry\" onClick={this.handleEntryClick.bind(this, entry.id)}>{entry.range}</td>\r\n                                        <td className=\"td-entry\" onClick={this.handleEntryClick.bind(this, entry.id)}>{entry.label}</td>\r\n                                        <td className=\"td-fit\">\r\n                                            <Button\r\n                                                variant=\"danger\"\r\n                                                onClick={this.handleDeleteEntry.bind(this, entry.id)}\r\n                                                aria-label=\"Delete Entry\"\r\n                                            >&times;</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"inline-buttons\">\r\n                            <Form.Group controlId=\"addEntry\">\r\n                                <Button onClick={this.handleEntryModalShow}>Add Entry</Button>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"deleteTable\">\r\n                                <Button variant=\"danger\" onClick={this.handleDeleteTable}>Delete Table</Button>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </Form>\r\n                    </div>\r\n                </Collapse>\r\n                {\r\n                    this.state.showEntryModal &&\r\n                    <EntryModal\r\n                        {...this.getEntryModalProps()}\r\n                        {...this.state.editEntryProps}\r\n                    />\r\n                }\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n\r\n    handleToggle() {\r\n        this.setState({\r\n            open: !this.state.open,\r\n        });\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        this.props.onNameChange(this.props.table.id, e.target.value);\r\n    }\r\n\r\n    handleHeaderChange(e) {\r\n        this.props.onHeaderChange(this.props.table.id, e.target.value);\r\n    }\r\n\r\n    handleDiceFormulaChange(e) {\r\n        this.props.onDiceFormulaChange(this.props.table.id, e.target.value);\r\n    }\r\n\r\n    handleEntryModalShow() {\r\n        this.setState({\r\n            showEntryModal: true\r\n        });\r\n    }\r\n\r\n    handleEntryModalClose() {\r\n        this.setState({\r\n            showEntryModal: false,\r\n            editEntryProps: DEFAULT_EDIT_ENTRY_PROPS,\r\n        });\r\n    }\r\n\r\n    handleEntryClick(entryId) {\r\n        const entry = this.props.table.entries.find(en => en.id === entryId);\r\n        if (entry) {\r\n            this.setState({\r\n                editEntryProps: {\r\n                    id: entryId,\r\n                    range: entry.range,\r\n                    label: entry.label,\r\n                    values: entry.values,\r\n                }\r\n            });\r\n            this.handleEntryModalShow();\r\n        }\r\n    }\r\n\r\n    handleDeleteEntry(entryId) {\r\n        const result = window.confirm(\"Are you sure you want to delete this entry?\");\r\n        if (result) {\r\n            this.props.onDeleteEntry(this.props.table.id, entryId);\r\n        }\r\n    }\r\n\r\n    handleDeleteTable() {\r\n        const result = window.confirm(\"Are you sure you want to delete this table?\");\r\n        if (result) {\r\n            this.props.onDeleteTable(this.props.table.id);\r\n        }\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport const NotFoundView = (props) => \r\n<Fragment>\r\n<Row>\r\n  <Col>\r\n    <h1>Page not found</h1>\r\n  </Col>\r\n</Row>\r\n</Fragment>","import React, { Component, Fragment } from \"react\";\r\nimport { Button, Card, Row, Col, Form, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport { TableEditor } from \"./TableEditor\";\r\nimport \"./index.css\";\r\nimport uuid from \"uuid\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NotFoundView } from '../NotFoundView';\r\nimport FileSaver from 'file-saver';\r\n\r\nconst EMPTY_PAGE = {\r\n  name: \"New Page\",\r\n  tables: [],\r\n  isPrivate: false,\r\n};\r\n\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      page: null,\r\n      saving: false,\r\n    };\r\n\r\n    this.handlePageNameChange = this.handlePageNameChange.bind(this);\r\n    this.handleAddTable = this.handleAddTable.bind(this);\r\n    this.handleDeleteTable = this.handleDeleteTable.bind(this);\r\n    this.handleSaveEntry = this.handleSaveEntry.bind(this);\r\n    this.handleDeleteEntry = this.handleDeleteEntry.bind(this);\r\n    this.handleDiceFormulaChange = this.handleDiceFormulaChange.bind(this);\r\n    this.handleTableNameChange = this.handleTableNameChange.bind(this);\r\n    this.handleHeaderChange = this.handleHeaderChange.bind(this);\r\n    this.handlePageNameChange = this.handlePageNameChange.bind(this);\r\n    this.handleExportPage = this.handleExportPage.bind(this);\r\n    this.handleSavePage = this.handleSavePage.bind(this);\r\n    this.handleDeletePage = this.handleDeletePage.bind(this);\r\n    this.handleIsPrivateChange = this.handleIsPrivateChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.pageId) {\r\n      this.unsubscribe = this.props\r\n        .firebase\r\n        .db\r\n        .collection(\"pages\")\r\n        .doc(this.props.pageId)\r\n        .onSnapshot(doc => {\r\n        if (doc.exists) {\r\n          if (doc.data().author_uid === this.props.authUser.uid) {\r\n            this.setState({\r\n              isLoading: false,\r\n              page: doc.data(),\r\n            });\r\n          } else {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n          })\r\n        }\r\n      });\r\n    } else if (this.props.importPage) {\r\n      this.setState({\r\n        isLoading: false,\r\n        page: this.props.importPage\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoading: false,\r\n        page: EMPTY_PAGE\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.unsubscribe){\r\n      this.unsubscribe()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n      (!this.state.page ?\r\n        <NotFoundView />\r\n        :\r\n        <Fragment>\r\n          <Row>\r\n            <Col xs={12} sm={6}>\r\n              <FormGroup controlId=\"pageName\">\r\n                <FormLabel>Page Name</FormLabel>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  value={this.state.page.name}\r\n                  onChange={this.handlePageNameChange}\r\n                >\r\n                </FormControl>\r\n              </FormGroup>\r\n              <FormGroup controlId=\"pageName\">\r\n                <FormLabel>Visibility: </FormLabel>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  id=\"private\"\r\n                  label=\"Private\"\r\n                  checked={this.state.page.isPrivate}\r\n                  onChange={this.handleIsPrivateChange}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} sm={6}>\r\n              <div className=\"top-right-button\">\r\n                <Row>\r\n                  {this.state.page.author_uid &&\r\n                    <Fragment>\r\n                      <Col>\r\n                        <Button onClick={this.handleExportPage}>Export Page</Button>\r\n                      </Col>\r\n                      <Col>\r\n                        <Button variant=\"danger\" onClick={this.handleDeletePage}>Delete Page</Button>\r\n                      </Col>\r\n                    </Fragment>\r\n\r\n                  }\r\n                  <Col>\r\n                    {this.state.saving ? (\r\n                      <Button variant=\"success\">Saving...</Button>\r\n                    ) : (\r\n                        <Button onClick={this.handleSavePage} variant=\"success\">\r\n                          Save Page\r\n                </Button>\r\n                      )}\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"button-row\">\r\n            <Col>\r\n              <Button onClick={this.handleAddTable}>Add Table</Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              {this.state.page.tables && this.state.page.tables.map(table => {\r\n                return (\r\n                  <Card key={table.id}>\r\n                    <Card.Body>\r\n                      <TableEditor\r\n                        table={table}\r\n                        tables={this.state.page.tables}\r\n                        onDiceFormulaChange={this.handleDiceFormulaChange}\r\n                        onSaveEntry={this.handleSaveEntry}\r\n                        onDeleteEntry={this.handleDeleteEntry}\r\n                        onNameChange={this.handleTableNameChange}\r\n                        onHeaderChange={this.handleHeaderChange}\r\n                        onDeleteTable={this.handleDeleteTable}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </Col>\r\n          </Row>\r\n        </Fragment>)\r\n    );\r\n  }\r\n\r\n  handlePageNameChange(e) {\r\n    const name = e.target.value;\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        name: name\r\n      }\r\n    });\r\n  }\r\n\r\n  handleAddTable() {\r\n    const newTable = {\r\n      id: uuid.v4(),\r\n      name: \"New Table\",\r\n      diceFormula: \"1d20\",\r\n      header: \"Treasure\",\r\n      entries: []\r\n    }\r\n    let updatedTables;\r\n    if (this.state.page.tables) {\r\n      updatedTables = [\r\n        ...this.state.page.tables,\r\n        newTable\r\n      ];\r\n    } else {\r\n      updatedTables = [\r\n        newTable\r\n      ]\r\n    }\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables,\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDeleteTable(id) {\r\n    const updatedTables = this.state.page.tables.filter(table => {\r\n      return table.id !== id\r\n    });\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDiceFormulaChange(tableId, diceFormula) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        table.diceFormula = diceFormula;\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      tables: updatedTables\r\n    });\r\n  }\r\n\r\n  handleSaveEntry(tableId, entry) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        if (!table.entries) {\r\n          table.entries = [{ ...entry }];\r\n        } else {\r\n          const entryIndex = table.entries.findIndex(e => e.id === entry.id);\r\n          if (entryIndex === -1) {\r\n            table.entries = [...table.entries, { ...entry }];\r\n          } else {\r\n            const updatedTable = { ...table };\r\n            updatedTable.entries.splice(entryIndex, 1, entry);\r\n          }\r\n        }\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDeleteEntry(tableId, entryId) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        if (table.entries) {\r\n          const updatedEntries = table.entries.filter(entry => {\r\n            return entry.id !== entryId;\r\n          });\r\n          table.entries = updatedEntries;\r\n        }\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables\r\n      }\r\n    });\r\n  }\r\n\r\n  handleTableNameChange(tableId, name) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        table.name = name;\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      tables: updatedTables\r\n    });\r\n  }\r\n\r\n  handleHeaderChange(tableId, header) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        table.header = header;\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      tables: updatedTables\r\n    });\r\n  }\r\n\r\n  handleExportPage() {\r\n    const { author_uid, created_at, ...exportData } = this.state.page;\r\n    const dataStr = JSON.stringify(exportData);\r\n    const blob = new Blob([dataStr], { type: \"text/plain;charset=utf-8\" });\r\n    const defaultFileName = \"data.json\";\r\n    FileSaver.saveAs(blob, defaultFileName);\r\n  }\r\n\r\n  handleSavePage() {\r\n    const pagesRef = this.props.firebase.db.collection(\"pages\");\r\n    let page;\r\n    if (this.props.pageId) {\r\n      page = pagesRef.doc(this.props.pageId)\r\n    } else {\r\n      page = pagesRef.doc();\r\n    }\r\n    page.set({ ...this.state.page, author_uid: this.props.authUser.uid, created_at: this.props.firebase.serverTimestamp() }, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      }\r\n    })\r\n      .then(() => {\r\n        this.props.history.push(\"/view/\" + page.id);\r\n      });\r\n  }\r\n\r\n  handleDeletePage() {\r\n    const confirm = window.confirm(\"Do you really want to delete this page?\");\r\n    if (confirm) {\r\n      this.props.firebase.db\r\n        .collection(\"pages\")\r\n        .doc(this.props.pageId)\r\n        .delete()\r\n        .then(() => {\r\n          this.props.history.push(\"/pages\");\r\n        });\r\n    }\r\n  }\r\n\r\n  handleIsPrivateChange(e) {\r\n    const isPrivate = e.target.checked;\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n       isPrivate\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default withRouter(Editor);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button, Table, Collapse } from \"react-bootstrap\";\r\n\r\nexport class RollTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n    }\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.props.handleRoll(this.props.table.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"d-flex\">\r\n          <Button className=\"roll-button\" onClick={this.onClick}>Roll</Button>\r\n          <div\r\n            className=\"table-title d-flex justify-content-between\"\r\n            onClick={this.handleToggle}\r\n          >\r\n            <h5>{this.props.table.name}</h5>\r\n            <i className={\"fas fa-chevron-\" + (this.state.open ? \"up\" : \"down\")}/>\r\n          </div>\r\n        </div>\r\n        <Collapse in={this.state.open}>\r\n          <div className=\"table-container\">\r\n            <Table responsive striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th><div className=\"rolltable-dice-header\"><span className=\"rolltable-dice-formula\">{this.props.table.diceFormula}</span></div></th>\r\n                  <th className=\"rolltable-header\">{this.props.table.header}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.table.entries && this.props.table.entries.map(entry => (\r\n                  <tr key={entry.id}>\r\n                    <td>{entry.range}</td>\r\n                    <td>{entry.label}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Collapse>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  handleToggle() {\r\n    this.setState({\r\n      open: !this.state.open,\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport uuid from 'uuid';\r\n\r\nexport const ROLL_MIN = \"min\";\r\nexport const ROLL_MAX = \"max\";\r\n\r\nexport const rollTable = (tableId, page) => {\r\n  const table = getTable(tableId, page);\r\n  if (table) {\r\n    return tableValue(table, page);\r\n  }\r\n  return [];\r\n}\r\n\r\nfunction getTable(tableId, page) {\r\n  const matchingTables = page.tables.filter(\r\n    table => table.id === tableId\r\n  );\r\n  if (matchingTables.length === 1) {\r\n    return matchingTables[0];\r\n  } else if (matchingTables.length === 0) {\r\n    console.log(\"No matching table found\");\r\n    return null;\r\n  } else {\r\n    console.log(\"Multiple matching tables found\");\r\n  }\r\n}\r\n\r\nfunction tableValue(table, page) {\r\n  if (!table.entries) {\r\n    return [];\r\n  }\r\n  const result = [];\r\n  const rollResult = roll(table.diceFormula);\r\n  result.push(<div key={uuid.v4()} className=\"rollText\">Rolled a {rollResult} on table {table.name}.</div>);\r\n  table.entries\r\n    .filter(entry => parseRange(entry.range).includes(rollResult))\r\n    .forEach(entry => {\r\n      result.push(<div key={uuid.v4()} className=\"labelText\" >{entry.label}</div>)\r\n      result.push(...entryValue(entry, page))\r\n    });\r\n  return result;\r\n}\r\n\r\nfunction entryValue(entry, page) {\r\n  const result = []\r\n  entry.values && entry.values.forEach(value => {\r\n    if (value.type === \"text\") {\r\n      result.push(<div key={uuid.v4()} className=\"valueText\">{value.text}</div>);\r\n    } else if (value.type === \"roll\") {\r\n      const table = getTable(value.targetTable, page);\r\n      if (table) {\r\n        result.push(...tableValue(table, page));\r\n      }\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction roll(input, mode) {\r\n  //todo validate input\r\n  /*\r\n        ^(((\\d+d\\d+)|\\d+)(\\+|-))*((\\d+d\\d+)|\\d+)$\r\n    */\r\n  input = input.replace(/\\s/g, \"\").toLowerCase();\r\n  const additions = input.split(\"+\");\r\n  return additions\r\n    .map(addition => {\r\n      const subtractions = addition.split(\"-\");\r\n      return subtractions\r\n        .map(subtraction => {\r\n          const dice = subtraction.split(\"d\");\r\n          if (dice.length === 1) {\r\n            return parseInt(dice[0]);\r\n          } else {\r\n            const numberOfDice = parseInt(dice[0]);\r\n            const diceSize = parseInt(dice[1]);\r\n            let result = 0;\r\n            for (let i = 0; i < numberOfDice; i++) {\r\n              if (mode === ROLL_MIN) {\r\n                return 1;\r\n              }\r\n              if (mode === ROLL_MAX) {\r\n                return diceSize;\r\n              }\r\n              result += Math.floor(Math.random() * diceSize + 1);\r\n            }\r\n            return result;\r\n          }\r\n        })\r\n        .reduce((acc, cur) => acc - cur);\r\n    })\r\n    .reduce((acc, cur) => acc + cur);\r\n};\r\n\r\nfunction parseRange(input) {\r\n  //todo validate input\r\n  //\\d+(-\\d+)?(,\\d+(-\\d+)?)*\r\n  const result = [];\r\n  input = input.replace(/\\s/g, \"\");\r\n  const commaSeparated = input.split(\",\");\r\n  commaSeparated.forEach(range => {\r\n    const values = range.split(\"-\");\r\n    if (values.length === 1) {\r\n      result.push(parseInt(values[0]));\r\n    } else {\r\n      const min = parseInt(values[0]);\r\n      const max = parseInt(values[1]);\r\n      for (let i = min; i <= max; i++) {\r\n        result.push(i);\r\n      }\r\n    }\r\n  });\r\n  return result;\r\n};\r\n","import React from \"react\";\r\nimport './index.css';\r\n\r\nexport const Result = ({ result }) => {\r\n  if(result){\r\n    return (\r\n          <div className=\"result-text\">\r\n            {result}\r\n          </div>\r\n    );\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Result } from \"../Result\";\r\n\r\nexport class ResultModal extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show} onHide={this.props.onHide}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Result</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Result result={this.props.result}/>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { RollTable } from \"./Rolltable\";\r\nimport { rollTable } from \"../Util/DiceUtil\";\r\nimport { Button, Row, Col, Card } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NotFoundView } from '../NotFoundView';\r\nimport {ResultModal} from './ResultModal';\r\nimport \"./index.css\"\r\n\r\nclass View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      page: null,\r\n      result: null,\r\n      showResultModal: false,\r\n    };\r\n\r\n    this.handleRoll = this.handleRoll.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleHideResultModal = this.handleHideResultModal.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.pageId) {\r\n      this.unsubscribe = this.props.firebase.db\r\n      .collection(\"pages\")\r\n      .doc(this.props.pageId)\r\n      .onSnapshot(doc => {\r\n        if (doc.exists) {\r\n          this.setState({\r\n            isLoading: false,\r\n            page: doc.data(),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n          })\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.unsubscribe){\r\n      this.unsubscribe()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n      (!this.state.page ?\r\n        <NotFoundView />\r\n        :\r\n        <Fragment>\r\n          <Row>\r\n            <Col xs={12} sm={6}>\r\n              <h1>{this.state.page.name}</h1>\r\n            </Col>\r\n            {this.props.authUser && this.props.authUser.uid === this.state.page.author_uid && <Col xs={12} sm={6}>\r\n              <div className=\"top-right-button\">\r\n                <Button onClick={this.handleEdit}>Edit Page</Button>\r\n              </div>\r\n            </Col>\r\n            }\r\n          </Row>\r\n          <Row className=\"view-tables\">\r\n            <Col>\r\n              {this.state.page.tables && this.state.page.tables.map(table => {\r\n                return (\r\n                  <Card key={table.id}>\r\n                    <Card.Body>\r\n                      <RollTable\r\n                        handleRoll={this.handleRoll}\r\n                        table={table}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n\r\n                );\r\n              })}\r\n            </Col>\r\n          </Row>\r\n          {\r\n                    <ResultModal\r\n                        result={this.state.result}\r\n                        show={this.state.showResultModal}\r\n                        onHide={this.handleHideResultModal}\r\n                    />\r\n          }\r\n        </Fragment>)\r\n    );\r\n  }\r\n\r\n  handleRoll(tableId) {\r\n    const result = rollTable(tableId, this.state.page);\r\n    this.setState({\r\n      result: result,\r\n      showResultModal: true,\r\n    });\r\n  }\r\n\r\n  handleEdit() {\r\n    this.props.history.push(\"/edit/\" + this.props.pageId);\r\n  }\r\n\r\n  handleHideResultModal(){\r\n    this.setState({\r\n      showResultModal: false,\r\n    })\r\n  }\r\n}\r\n\r\nexport default withRouter(View);\r\n","import {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './index.css';\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            this.props.firebase.LoginScreen()\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport \"./index.css\";\r\n\r\nclass Pages extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pages: null,\r\n        }\r\n\r\n        this.handleCreatePage = this.handleCreatePage.bind(this);\r\n        this.handleImportPage = this.handleImportPage.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.pages && (\r\n                        <Fragment>\r\n                            <Row className=\"center\">\r\n                                <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                                    <h1>Your Pages</h1>\r\n                                    <div className=\"list-group\">\r\n                                        {this.state.pages.map(page => {\r\n                                            return (\r\n                                                <Link\r\n                                                    key={page.id}\r\n                                                    to={\"/view/\" + page.id}\r\n                                                    className=\"list-group-item list-group-item-action\"\r\n                                                >\r\n                                                    {page.name}\r\n                                                </Link>\r\n                                            );\r\n                                        })\r\n                                        }\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"center pages-button-row\">\r\n                                <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                                    <Button onClick={this.handleCreatePage}>Create Page</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"center pages-button-row\">\r\n                                <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                                    <div>\r\n                                        <label htmlFor=\"customFile\">\r\n                                            <div className=\"btn btn-primary\">\r\n                                                Import Page\r\n                                            </div>\r\n                                        </label>\r\n                                        <input type=\"file\" accept=\"application/json\" hidden id=\"customFile\" onChange={this.handleImportPage} />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.authUser) {\r\n            this.unsubscribe = this.props.firebase.db\r\n                .collection(\"pages\")\r\n                .where(\"author_uid\", \"==\", this.props.authUser.uid)\r\n                .onSnapshot(snapshot => {\r\n                    const pages = [];\r\n                    snapshot.forEach(data => {\r\n                        pages.push({ ...data.data(), id: data.id });\r\n                    });\r\n                    pages.sort((a, b) => a.created_at < b.created_at ? 1 : -1);\r\n                    this.setState({\r\n                        pages\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unsubscribe){\r\n            this.unsubscribe()\r\n          }\r\n    }\r\n\r\n    handleCreatePage() {\r\n        this.props.history.push(\"/create\");\r\n    }\r\n\r\n    handleImportPage(e) {\r\n        const fileList = e.target.files;\r\n        if (fileList.length > 0) {\r\n            const file = fileList[0];\r\n            var reader = new FileReader();\r\n            reader.readAsText(file);\r\n            reader.onload = (e) => {\r\n                const jsonString = e.target.result;\r\n                const page = JSON.parse(jsonString);\r\n                this.props.onImportPage(page);\r\n                this.props.history.push(\"/import\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Pages);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport Editor from \"./Editor\";\nimport View from \"./View\";\nimport Login from './Login';\nimport Pages from './Pages';\nimport { NotFoundView } from './NotFoundView';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userSet: false,\n      authUser: null,\n      importPage: null,\n    };\n\n    this.Home = this.Home.bind(this);\n    this.Login = this.Login.bind(this);\n    this.Pages = this.Pages.bind(this);\n    this.Create = this.Create.bind(this);\n    this.Edit = this.Edit.bind(this);\n    this.View = this.View.bind(this);\n    this.Import = this.Import.bind(this);\n    this.handleImportPage = this.handleImportPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.firebase.auth.onAuthStateChanged(authUser => {\n      authUser\n        ? this.setState({ authUser, userSet: true })\n        : this.setState({ authUser: null, userSet: true });\n    });\n  }\n\n  render() {\n    return this.state.userSet && (\n      <Router>\n        <Navigation firebase={this.props.firebase} authUser={this.state.authUser} />\n        <Container fluid>\n          <Row>\n            <Col>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Switch>\n                <Route exact path=\"/\" component={this.Home} />\n                <Route exact path=\"/login\" component={this.Login} />\n                <this.PrivateRoute path=\"/pages\" component={this.Pages} />\n                <this.PrivateRoute path=\"/create\" component={this.Create} />\n                <this.PrivateRoute path=\"/import\" component={this.Import} />\n                <this.PrivateRoute path=\"/edit/:pageId\" component={this.Edit} />\n                <Route path=\"/view/:pageId\" component={this.View} />\n                <Route component={NotFoundView} />\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n    );\n  }\n\n  Home() {\n    return (\n      <Home firebase={this.props.firebase} authUser={this.state.authUser} />\n    )\n  }\n\n  Login() {\n    return (\n      <Login firebase={this.props.firebase} />\n    )\n  }\n\n  Pages() {\n    return (\n      <Pages firebase={this.props.firebase} authUser={this.state.authUser} onImportPage={this.handleImportPage}/>\n    );\n  }\n\n  Create() {\n    return (\n      <Editor \n        firebase={this.props.firebase}\n        authUser={this.state.authUser}\n      />\n    );\n  }\n\n  Import() {\n    if(this.state.importPage) {\n      return (\n        <Editor \n          firebase={this.props.firebase}\n          authUser={this.state.authUser}\n          importPage={this.state.importPage}\n        />\n      );\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  }\n\n  Edit({ match }) {\n    return (\n      <Editor\n        firebase={this.props.firebase}\n        authUser={this.state.authUser}\n        pageId={match.params.pageId}\n      />\n    );\n  }\n\n  View({ match }) {\n    return (\n      <View\n        firebase={this.props.firebase}\n        authUser={this.state.authUser}\n        pageId={match.params.pageId}\n      />\n    );\n  }\n\n  PrivateRoute = ({ component: Component, ...rest }) => (\n    this.state.userSet &&\n    <Route {...rest} render={(props) => (\n      this.state.authUser\n        ? <Component {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n    )} />\n  );\n\n  handleImportPage(page){\n    this.setState({\n      importPage: page\n    });\n  }\n}\n","import firebase from 'firebase';\r\nimport {StyledFirebaseAuth} from 'react-firebaseui';\r\n\r\nimport React from 'react';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDm_aiHYiZQc4ypOHIwywQ3J8JFPMRWbrk\",\r\n  authDomain: \"rolltable.firebaseapp.com\",\r\n  databaseURL: \"https://rolltable.firebaseio.com\",\r\n  projectId: \"rolltable\",\r\n  storageBucket: \"rolltable.appspot.com\",\r\n  messagingSenderId: \"404433756558\"\r\n};\r\n\r\nconst uiConfig = ({\r\n  signInSuccessUrl: '/rolltables/#/pages',\r\n  signInOptions: [\r\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n  ],\r\n});\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    firebase.initializeApp(config);\r\n    this.auth = firebase.auth();\r\n    this.db = firebase.firestore();\r\n    this.serverTimestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  LoginScreen = (props) => <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={this.auth} />\r\n}\r\n\r\nexport const FirebaseContext = React.createContext(null);\r\n\r\nexport default Firebase;","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport Firebase, {FirebaseContext} from './firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <FirebaseContext.Consumer>\n            {\n                firebase => <App firebase={firebase} />\n            }   \n        </FirebaseContext.Consumer>\n    </FirebaseContext.Provider>\n,\ndocument.getElementById(\"root\"));\n"],"sourceRoot":""}