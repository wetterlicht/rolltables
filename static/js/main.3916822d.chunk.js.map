{"version":3,"sources":["Navigation/index.js","Home/index.js","Editor/TableEditor/EntryEditor/ValueEditor.js","Editor/TableEditor/EntryEditor/index.js","Editor/TableEditor/EntryModal.js","Editor/TableEditor/index.js","NotFoundView.js","Editor/index.js","View/Rolltable/index.js","View/Result/index.js","Util/DiceUtil.js","View/index.js","Login/index.js","Pages/index.js","App.js","firebase.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","this","props","authUser","role","onClick","firebase","doSignOut","Component","Home","_Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pages","newPagesRef","inherits","createClass","key","value","_this2","db","ref","orderByChild","limitToLast","setState","on","snapshot","forEach","data","push","objectSpread","val","id","reverse","off","Row","Col","sm","span","offset","md","map","page","name","ValueEditor","handleTypeChange","bind","assertThisInitialized","handleTextChange","handleTargetTableChange","react","Form","Group","controlId","Label","Control","as","type","onChange","rows","text","targetTable","tables","table","e","onTypeChange","target","onTextChange","onTargetTableChange","EntryEditor","apply","arguments","range","onRangeChange","label","onLabelChange","values","Button","variant","onDeleteValue","aria-label","ValueEditor_ValueEditor","onAddValue","EntryModal","handleRangeChange","handleLabelChange","handleAddValue","handleDeleteValue","handleSaveEntry","handleValueTypeChange","handleValueTextChange","handleValueTargetTableChange","Modal","show","onHide","onEntryModalClose","Header","closeButton","Title","Body","EntryEditor_EntryEditor","Footer","concat","toConsumableArray","uuid","v4","valueId","window","confirm","updatedValues","filter","entry","onSaveEntry","tableId","typeValue","textValue","targetTableValue","DEFAULT_EDIT_ENTRY_PROPS","TableEditor","showEntryModal","editEntryProps","open","handleToggle","handleNameChange","handleHeaderChange","handleDiceFormulaChange","handleEntryModalShow","handleEntryModalClose","handleEntryClick","handleDeleteTable","handleDeleteEntry","Collapse","in","Table","striped","bordered","hover","diceFormula","header","entries","EntryModal_EntryModal","assign","getEntryModalProps","onNameChange","onHeaderChange","onDiceFormulaChange","entryId","find","en","onDeleteEntry","onDeleteTable","NotFoundView","EMPTY_PAGE","Editor","isLoading","saving","pageRef","handlePageNameChange","handleAddTable","handleTableNameChange","handleExportPage","handleSavePage","handleDeletePage","pageId","child","exists","author_uid","uid","importPage","_this3","xs","FormGroup","FormLabel","FormControl","Card","TableEditor_TableEditor","NotFoundView_NotFoundView","updatedTables","newTable","entryIndex","findIndex","splice","updatedEntries","_this$state$page","exportData","created_at","objectWithoutProperties","dataStr","JSON","stringify","blob","Blob","FileSaver","saveAs","_this4","pagesRef","set","serverTimestamp","error","console","log","then","history","_this5","remove","withRouter","RollTable","handleRoll","responsive","Result","_ref","result","join","ROLL_MIN","ROLL_MAX","getTable","matchingTables","length","tableValue","mode","rollResult","replace","toLowerCase","split","addition","subtractions","subtraction","dice","parseInt","numberOfDice","diceSize","i","Math","floor","random","reduce","acc","cur","input","min","max","parseRange","includes","entryValue","View","handleEdit","Rolltable_RollTable","Result_Result","rollTable","Login","LoginScreen","Pages","userPagesRef","handleCreatePage","handleImportPage","htmlFor","accept","hidden","equalTo","sort","b","fileList","files","file","reader","FileReader","readAsText","onload","jsonString","parse","onImportPage","App","PrivateRoute","component","rest","userSet","react_router","render","pathname","from","location","Create","Edit","Import","auth","onAuthStateChanged","Navigation_Navigation","Container","fluid","exact","path","src_Home","src_Login_0","src_Pages_0","src_Editor_0","_ref2","match","params","_ref3","src_View_0","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","uiConfig","signInSuccessUrl","signInOptions","FacebookAuthProvider","PROVIDER_ID","GoogleAuthProvider","TwitterAuthProvider","EmailAuthProvider","FirebaseContext","React","createContext","Firebase","signOut","react_firebaseui","firebaseAuth","initializeApp","database","ServerValue","TIMESTAMP","ReactDOM","Provider","Consumer","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.3916822d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport './index.css';\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <NavLink to=\"/\" className=\"navbar-brand\"><i className=\"fas fa-dice-d20\"></i> Rolltables</NavLink>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    {this.props.authUser &&\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/pages\" className=\"nav-link\">Your Pages</NavLink>\r\n                        </li>\r\n                    }\r\n                </ul>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        {this.props.authUser ?\r\n                            <span role=\"button\" className=\"nav-logout nav-link\" onClick={this.props.firebase.doSignOut}>Logout</span>\r\n                            :\r\n                            <NavLink to=\"/login\" className=\"nav-link\">Login</NavLink>\r\n                        }\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nexport class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pages: null,\r\n            newPagesRef: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n            const newPagesRef = this.props.firebase.db.ref(\"pages\").orderByChild(\"creation_date\").limitToLast(5);\r\n            this.setState({\r\n                newPagesRef\r\n            })\r\n            newPagesRef.on(\"value\", snapshot => {\r\n                const pages = [];\r\n                snapshot.forEach(data => {\r\n                    pages.push({ ...data.val(), id: data.key });\r\n                });\r\n                pages.reverse();\r\n                this.setState({\r\n                    pages\r\n                });\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.newPagesRef) {\r\n            this.state.newPagesRef.off(\"value\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center\">\r\n                <h1>Welcome!</h1>\r\n                {!this.props.authUser ?\r\n                    <p>\r\n                        Check out the latest tables below or <Link to=\"/login\">login</Link> to start creating your own!\r\n                    </p>\r\n                    :\r\n                    <p>\r\n                        Check out the latest tables below or start <Link to=\"/pages\">creating your own!</Link>\r\n                    </p>\r\n                }\r\n                {this.state.pages && \r\n                    <Row className=\"center\">\r\n                    <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                        <h1>Latest Pages</h1>\r\n                        <div className=\"list-group\">\r\n                            {this.state.pages.map(page => {\r\n                                return (\r\n                                    <Link\r\n                                        key={page.id}\r\n                                        to={\"/view/\" + page.id}\r\n                                        className=\"list-group-item list-group-item-action\"\r\n                                    >\r\n                                        {page.name}\r\n                                    </Link>\r\n                                );\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component, Fragment } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport const VALUE_TYPE_TEXT = \"text\";\r\nexport const VALUE_TYPE_ROLL = \"roll\";\r\n\r\nexport class ValueEditor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleTypeChange = this.handleTypeChange.bind(this);\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleTargetTableChange = this.handleTargetTableChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Form.Group controlId=\"formGroupType\">\r\n                    <Form.Label>Type: </Form.Label>\r\n                    <Form.Control as=\"select\" value={this.props.value.type} onChange={this.handleTypeChange} >\r\n                        <option value={VALUE_TYPE_TEXT}>Text</option>\r\n                        <option value={VALUE_TYPE_ROLL}>Roll</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n              {this.props.value.type === \"text\" &&\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Text: </Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" value={this.props.value.text} onChange={this.handleTextChange} />\r\n                    </Form.Group>\r\n                }\r\n                {this.props.value.type === \"roll\" &&\r\n                    <Form.Group controlId=\"formGroupRoll\">\r\n                        <Form.Label>Table: </Form.Label>\r\n                        <Form.Control as=\"select\" value={this.props.value.targetTable} onChange={this.handleTargetTableChange}>\r\n                            {this.props.tables.map(table =>\r\n                                <option key={table.id} value={table.id} >{table.name}</option>\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    handleTypeChange(e) {\r\n        this.props.onTypeChange(this.props.value.id, e.target.value);\r\n    }\r\n\r\n    handleTextChange(e) {\r\n        this.props.onTextChange(this.props.value.id, e.target.value);\r\n    }\r\n\r\n    handleTargetTableChange(e) {\r\n        this.props.onTargetTableChange(this.props.value.id, e.target.value);\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { ValueEditor } from './ValueEditor';\r\n\r\nexport class EntryEditor extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Form.Group controlId=\"range\">\r\n                    <Form.Label>Range</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.props.range} onChange={this.props.onRangeChange} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"label\">\r\n                    <Form.Label>Label</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.props.label} onChange={this.props.onLabelChange} />\r\n                </Form.Group>\r\n                <hr />\r\n                {this.props.values.map(value =>\r\n                    <Fragment key={value.id}>\r\n                        <fieldset >\r\n                                <legend className=\"d-flex justify-content-between\">\r\n                                    Value\r\n                                    <Button\r\n                                    className=\"delete-value\"\r\n                                    variant=\"danger\"\r\n                                    onClick={this.props.onDeleteValue.bind(this, value.id)}\r\n                                    aria-label=\"Delete Value\"\r\n                                >&times;\r\n                            </Button>\r\n                            </legend>\r\n                            <ValueEditor\r\n                                value={value}\r\n                                tables={this.props.tables}\r\n                                onTypeChange={this.props.onTypeChange}\r\n                                onTextChange={this.props.onTextChange}\r\n                                onTargetTableChange={this.props.onTargetTableChange}\r\n                            />\r\n                        </fieldset>\r\n                        <hr />\r\n                    </Fragment>\r\n                )}\r\n                <Form.Group controlId=\"addEntry\">\r\n                    <Button onClick={this.props.onAddValue}>Add Value</Button>\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { EntryEditor } from \"./EntryEditor\";\r\nimport uuid from \"uuid\";\r\n\r\nexport class EntryModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      range: props.range,\r\n      values: props.values,\r\n      label: props.label\r\n    };\r\n\r\n    this.handleRangeChange = this.handleRangeChange.bind(this);\r\n    this.handleLabelChange = this.handleLabelChange.bind(this);\r\n    this.handleAddValue = this.handleAddValue.bind(this);\r\n    this.handleDeleteValue = this.handleDeleteValue.bind(this);\r\n    this.handleSaveEntry = this.handleSaveEntry.bind(this);\r\n    this.handleValueTypeChange = this.handleValueTypeChange.bind(this);\r\n    this.handleValueTextChange = this.handleValueTextChange.bind(this);\r\n    this.handleValueTargetTableChange = this.handleValueTargetTableChange.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show} onHide={this.props.onEntryModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{this.props.id ? \"Edit Entry\" : \"Add Entry\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <EntryEditor\r\n            range={this.state.range}\r\n            label={this.state.label}\r\n            values={this.state.values}\r\n            tables={this.props.tables}\r\n            onAddValue={this.handleAddValue}\r\n            onDeleteValue={this.handleDeleteValue}\r\n            onRangeChange={this.handleRangeChange}\r\n            onLabelChange={this.handleLabelChange}\r\n            onTypeChange={this.handleValueTypeChange}\r\n            onTextChange={this.handleValueTextChange}\r\n            onTargetTableChange={this.handleValueTargetTableChange}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.onEntryModalClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSaveEntry}>\r\n            {this.props.id ? \"Save Entry\" : \"Add Entry\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  handleRangeChange(e) {\r\n    //todo validate\r\n    this.setState({\r\n      range: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLabelChange(e) {\r\n    this.setState({\r\n      label: e.target.value\r\n    });\r\n  }\r\n\r\n  handleAddValue() {\r\n    this.setState({\r\n      values: [\r\n        ...this.state.values,\r\n        {\r\n          id: uuid.v4(),\r\n          type: \"text\",\r\n          text: \"\",\r\n          table: \"\"\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleDeleteValue(valueId) {\r\n    const confirm = window.confirm(\"Are you sure you want to delete this value?\");\r\n    if (confirm) {\r\n      const updatedValues = this.state.values.filter(value => {\r\n        return value.id !== valueId;\r\n      })\r\n      this.setState({\r\n        values: updatedValues\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSaveEntry() {\r\n    const entry = {\r\n      id: this.props.id ? this.props.id : uuid.v4(),\r\n      range: this.state.range,\r\n      label: this.state.label,\r\n      values: this.state.values\r\n    };\r\n    this.props.onSaveEntry(this.props.tableId, entry);\r\n    this.props.onEntryModalClose();\r\n  }\r\n\r\n  handleValueTypeChange(valueId, typeValue) {\r\n    const updatedValues = this.state.values.map(value => {\r\n      if (value.id === valueId) {\r\n        return { ...value, type: typeValue };\r\n      }\r\n      return value;\r\n    });\r\n    this.setState({\r\n      values: updatedValues\r\n    });\r\n  }\r\n\r\n  handleValueTextChange(valueId, textValue) {\r\n    const updatedValues = this.state.values.map(value => {\r\n      if (value.id === valueId) {\r\n        return { ...value, text: textValue };\r\n      }\r\n      return value;\r\n    });\r\n    this.setState({\r\n      values: updatedValues\r\n    });\r\n  }\r\n\r\n  handleValueTargetTableChange(valueId, targetTableValue) {\r\n    const updatedValues = this.state.values.map(value => {\r\n      if (value.id === valueId) {\r\n        return { ...value, targetTable: targetTableValue };\r\n      }\r\n      return value;\r\n    });\r\n    this.setState({\r\n      values: updatedValues\r\n    });\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Form, Button, Table, Collapse } from \"react-bootstrap\";\r\nimport { EntryModal } from \"./EntryModal\";\r\n\r\nconst DEFAULT_EDIT_ENTRY_PROPS = {\r\n    id: '',\r\n    range: [],\r\n    label: '',\r\n    values: [],\r\n}\r\n\r\nexport class TableEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showEntryModal: false,\r\n            editEntryProps: DEFAULT_EDIT_ENTRY_PROPS,\r\n            open: false,\r\n        };\r\n\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleHeaderChange = this.handleHeaderChange.bind(this);\r\n        this.handleDiceFormulaChange = this.handleDiceFormulaChange.bind(this);\r\n        this.handleEntryModalShow = this.handleEntryModalShow.bind(this);\r\n        this.handleEntryModalClose = this.handleEntryModalClose.bind(this);\r\n        this.handleEntryClick = this.handleEntryClick.bind(this);\r\n        this.handleDeleteTable = this.handleDeleteTable.bind(this);\r\n        this.handleDeleteEntry = this.handleDeleteEntry.bind(this);\r\n    }\r\n\r\n    getEntryModalProps() {\r\n        return {\r\n            show: this.state.showEntryModal,\r\n            tables: this.props.tables,\r\n            tableId: this.props.table.id,\r\n            onSaveEntry: this.props.onSaveEntry,\r\n            onEntryModalClose: this.handleEntryModalClose\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"d-flex\">\r\n                    <div\r\n                        className=\"table-title d-flex justify-content-between\"\r\n                        onClick={this.handleToggle}\r\n                    >\r\n                        <h5>{this.props.table.name}</h5>\r\n                        <i className={\"fas fa-chevron-\" + (this.state.open ? \"up\" : \"down\")} />\r\n                    </div>\r\n                </div>\r\n                <Collapse in={this.state.open}>\r\n                    <div className=\"table-container\">\r\n                    <Form>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Table Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={this.props.table.name}\r\n                                onChange={this.handleNameChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <Form.Group controlId=\"diceFormula\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={this.props.table.diceFormula}\r\n                                                onChange={this.handleDiceFormulaChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </th>\r\n                                    <th>\r\n                                        <Form.Group controlId=\"header\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={this.props.table.header}\r\n                                                onChange={this.handleHeaderChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.table.entries && this.props.table.entries.map(entry => (\r\n                                    <tr key={entry.id} >\r\n                                        <td className=\"td-entry\" onClick={this.handleEntryClick.bind(this, entry.id)}>{entry.range}</td>\r\n                                        <td className=\"td-entry\" onClick={this.handleEntryClick.bind(this, entry.id)}>{entry.label}</td>\r\n                                        <td className=\"td-fit\">\r\n                                            <Button\r\n                                                variant=\"danger\"\r\n                                                onClick={this.handleDeleteEntry.bind(this, entry.id)}\r\n                                                aria-label=\"Delete Entry\"\r\n                                            >&times;</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"inline-buttons\">\r\n                            <Form.Group controlId=\"addEntry\">\r\n                                <Button onClick={this.handleEntryModalShow}>Add Entry</Button>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"deleteTable\">\r\n                                <Button variant=\"danger\" onClick={this.handleDeleteTable}>Delete Table</Button>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </Form>\r\n                    </div>\r\n                </Collapse>\r\n                {\r\n                    this.state.showEntryModal &&\r\n                    <EntryModal\r\n                        {...this.getEntryModalProps()}\r\n                        {...this.state.editEntryProps}\r\n                    />\r\n                }\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n\r\n    handleToggle() {\r\n        this.setState({\r\n            open: !this.state.open,\r\n        });\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        this.props.onNameChange(this.props.table.id, e.target.value);\r\n    }\r\n\r\n    handleHeaderChange(e) {\r\n        this.props.onHeaderChange(this.props.table.id, e.target.value);\r\n    }\r\n\r\n    handleDiceFormulaChange(e) {\r\n        this.props.onDiceFormulaChange(this.props.table.id, e.target.value);\r\n    }\r\n\r\n    handleEntryModalShow() {\r\n        this.setState({\r\n            showEntryModal: true\r\n        });\r\n    }\r\n\r\n    handleEntryModalClose() {\r\n        this.setState({\r\n            showEntryModal: false,\r\n            editEntryProps: DEFAULT_EDIT_ENTRY_PROPS,\r\n        });\r\n    }\r\n\r\n    handleEntryClick(entryId) {\r\n        const entry = this.props.table.entries.find(en => en.id === entryId);\r\n        if (entry) {\r\n            this.setState({\r\n                editEntryProps: {\r\n                    id: entryId,\r\n                    range: entry.range,\r\n                    label: entry.label,\r\n                    values: entry.values,\r\n                }\r\n            });\r\n            this.handleEntryModalShow();\r\n        }\r\n    }\r\n\r\n    handleDeleteEntry(entryId) {\r\n        const result = window.confirm(\"Are you sure you want to delete this entry?\");\r\n        if (result) {\r\n            this.props.onDeleteEntry(this.props.table.id, entryId);\r\n        }\r\n    }\r\n\r\n    handleDeleteTable() {\r\n        const result = window.confirm(\"Are you sure you want to delete this table?\");\r\n        if (result) {\r\n            this.props.onDeleteTable(this.props.table.id);\r\n        }\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport const NotFoundView = (props) => \r\n<Fragment>\r\n<Row>\r\n  <Col>\r\n    <h1>Page not found</h1>\r\n  </Col>\r\n</Row>\r\n</Fragment>","import React, { Component, Fragment } from \"react\";\r\nimport { Button, Card, Row, Col, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport { TableEditor } from \"./TableEditor\";\r\nimport \"./index.css\";\r\nimport uuid from \"uuid\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NotFoundView } from '../NotFoundView';\r\nimport FileSaver from 'file-saver';\r\n\r\nconst EMPTY_PAGE = {\r\n  name: \"New Page\",\r\n  tables: [],\r\n};\r\n\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      page: null,\r\n      saving: false,\r\n      pageRef: null,\r\n    };\r\n\r\n    this.handlePageNameChange = this.handlePageNameChange.bind(this);\r\n    this.handleAddTable = this.handleAddTable.bind(this);\r\n    this.handleDeleteTable = this.handleDeleteTable.bind(this);\r\n    this.handleSaveEntry = this.handleSaveEntry.bind(this);\r\n    this.handleDeleteEntry = this.handleDeleteEntry.bind(this);\r\n    this.handleDiceFormulaChange = this.handleDiceFormulaChange.bind(this);\r\n    this.handleTableNameChange = this.handleTableNameChange.bind(this);\r\n    this.handleHeaderChange = this.handleHeaderChange.bind(this);\r\n    this.handlePageNameChange = this.handlePageNameChange.bind(this);\r\n    this.handleExportPage = this.handleExportPage.bind(this);\r\n    this.handleSavePage = this.handleSavePage.bind(this);\r\n    this.handleDeletePage = this.handleDeletePage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.pageId) {\r\n      const pageRef = this.props\r\n        .firebase\r\n        .db\r\n        .ref(\"pages\")\r\n        .child(this.props.pageId);\r\n      this.setState({\r\n        pageRef\r\n      });\r\n      pageRef.on(\"value\", snapshot => {\r\n        if (snapshot.exists()) {\r\n          if (snapshot.val().author_uid === this.props.authUser.uid) {\r\n            this.setState({\r\n              isLoading: false,\r\n              page: snapshot.val(),\r\n            });\r\n          } else {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n          })\r\n        }\r\n      });\r\n    } else if (this.props.importPage) {\r\n      this.setState({\r\n        isLoading: false,\r\n        page: this.props.importPage\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoading: false,\r\n        page: EMPTY_PAGE\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.pageRef) {\r\n      this.state.pageRef.off(\"value\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n      (!this.state.page ?\r\n        <NotFoundView />\r\n        :\r\n        <Fragment>\r\n          <Row>\r\n            <Col xs={12} sm={6}>\r\n              <FormGroup controlId=\"pageName\">\r\n                <FormLabel>Page Name</FormLabel>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  value={this.state.page.name}\r\n                  onChange={this.handlePageNameChange}\r\n                >\r\n                </FormControl>\r\n              </FormGroup>\r\n\r\n            </Col>\r\n            <Col xs={12} sm={6}>\r\n              <div className=\"top-right-button\">\r\n              <Row>\r\n                {this.state.page.author_uid &&\r\n                  <Fragment>\r\n                    <Col>\r\n                      <Button onClick={this.handleExportPage}>Export Page</Button>\r\n                    </Col>\r\n                    <Col>\r\n                    <Button variant=\"danger\" onClick={this.handleDeletePage}>Delete Page</Button>\r\n                    </Col>\r\n                  </Fragment>\r\n\r\n                }\r\n                <Col>\r\n                {this.state.saving ? (\r\n                  <Button variant=\"success\">Saving...</Button>\r\n                ) : (\r\n                    <Button onClick={this.handleSavePage} variant=\"success\">\r\n                      Save Page\r\n                </Button>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"button-row\">\r\n            <Col>\r\n              <Button onClick={this.handleAddTable}>Add Table</Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              {this.state.page.tables && this.state.page.tables.map(table => {\r\n                return (\r\n                  <Card key={table.id}>\r\n                    <Card.Body>\r\n                      <TableEditor\r\n                        table={table}\r\n                        tables={this.state.page.tables}\r\n                        onDiceFormulaChange={this.handleDiceFormulaChange}\r\n                        onSaveEntry={this.handleSaveEntry}\r\n                        onDeleteEntry={this.handleDeleteEntry}\r\n                        onNameChange={this.handleTableNameChange}\r\n                        onHeaderChange={this.handleHeaderChange}\r\n                        onDeleteTable={this.handleDeleteTable}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </Col>\r\n          </Row>\r\n        </Fragment>)\r\n    );\r\n  }\r\n\r\n  handlePageNameChange(e) {\r\n    const name = e.target.value;\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        name: name\r\n      }\r\n    });\r\n  }\r\n\r\n  handleAddTable() {\r\n    const newTable = {\r\n      id: uuid.v4(),\r\n      name: \"New Table\",\r\n      diceFormula: \"1d20\",\r\n      header: \"Treasure\",\r\n      entries: []\r\n    }\r\n    let updatedTables;\r\n    if (this.state.page.tables) {\r\n      updatedTables = [\r\n        ...this.state.page.tables,\r\n        newTable\r\n      ];\r\n    } else {\r\n      updatedTables = [\r\n        newTable\r\n      ]\r\n    }\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables,\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDeleteTable(id) {\r\n    const updatedTables = this.state.page.tables.filter(table => {\r\n      return table.id !== id\r\n    });\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDiceFormulaChange(tableId, diceFormula) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        table.diceFormula = diceFormula;\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      tables: updatedTables\r\n    });\r\n  }\r\n\r\n  handleSaveEntry(tableId, entry) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        if (!table.entries) {\r\n          table.entries = [{ ...entry }];\r\n        } else {\r\n          const entryIndex = table.entries.findIndex(e => e.id === entry.id);\r\n          if (entryIndex === -1) {\r\n            table.entries = [...table.entries, { ...entry }];\r\n          } else {\r\n            const updatedTable = { ...table };\r\n            updatedTable.entries.splice(entryIndex, 1, entry);\r\n          }\r\n        }\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDeleteEntry(tableId, entryId) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        if (table.entries) {\r\n          const updatedEntries = table.entries.filter(entry => {\r\n            return entry.id !== entryId;\r\n          });\r\n          table.entries = updatedEntries;\r\n        }\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables\r\n      }\r\n    });\r\n  }\r\n\r\n  handleTableNameChange(tableId, name) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        table.name = name;\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      tables: updatedTables\r\n    });\r\n  }\r\n\r\n  handleHeaderChange(tableId, header) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        table.header = header;\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      tables: updatedTables\r\n    });\r\n  }\r\n\r\n  handleExportPage() {\r\n    const { author_uid, created_at, ...exportData } = this.state.page;\r\n    const dataStr = JSON.stringify(exportData);\r\n    const blob = new Blob([dataStr], { type: \"text/plain;charset=utf-8\" });\r\n    const defaultFileName = \"data.json\";\r\n    FileSaver.saveAs(blob, defaultFileName);\r\n  }\r\n\r\n  handleSavePage() {\r\n    const pagesRef = this.props.firebase.db.ref(\"pages\");\r\n    let page;\r\n    if (this.props.pageId) {\r\n      page = pagesRef.child(this.props.pageId)\r\n    } else {\r\n      page = pagesRef.push();\r\n    }\r\n    page.set({ ...this.state.page, author_uid: this.props.authUser.uid, created_at: this.props.firebase.serverTimestamp }, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      }\r\n    })\r\n      .then(() => {\r\n        this.props.history.push(\"/view/\" + page.key);\r\n      });\r\n  }\r\n\r\n  handleDeletePage() {\r\n    const confirm = window.confirm(\"Do you really want to delete this page?\");\r\n    if (confirm) {\r\n      const pagesRef = this.props.firebase.db.ref(\"pages\");\r\n      let page;\r\n      page = pagesRef.child(this.props.pageId)\r\n      page.remove()\r\n        .then(() => {\r\n          this.props.history.push(\"/pages\");\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Editor);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button, Table, Collapse } from \"react-bootstrap\";\r\n\r\nexport class RollTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n    }\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.props.handleRoll(this.props.table.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"d-flex\">\r\n          <Button className=\"roll-button\" onClick={this.onClick}>Roll</Button>\r\n          <div\r\n            className=\"table-title d-flex justify-content-between\"\r\n            onClick={this.handleToggle}\r\n          >\r\n            <h5>{this.props.table.name}</h5>\r\n            <i className={\"fas fa-chevron-\" + (this.state.open ? \"up\" : \"down\")}/>\r\n          </div>\r\n        </div>\r\n        <Collapse in={this.state.open}>\r\n          <div className=\"table-container\">\r\n            <Table responsive striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th><div className=\"rolltable-dice-header\"><span className=\"rolltable-dice-formula\">{this.props.table.diceFormula}</span></div></th>\r\n                  <th className=\"rolltable-header\">{this.props.table.header}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.table.entries && this.props.table.entries.map(entry => (\r\n                  <tr key={entry.id}>\r\n                    <td>{entry.range}</td>\r\n                    <td>{entry.label}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Collapse>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  handleToggle() {\r\n    this.setState({\r\n      open: !this.state.open,\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './index.css';\r\n\r\nexport const Result = ({ result }) => {\r\n  return (\r\n    result && (\r\n      <div>\r\n        <h4>Result</h4>\r\n        <div className=\"result-text\">\r\n          {result.join(\"\\n\")}\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","export const ROLL_MIN = \"min\";\r\nexport const ROLL_MAX = \"max\";\r\n\r\nexport const rollTable = (tableId, page) => {\r\n  const table = getTable(tableId, page);\r\n  if (table) {\r\n    return tableValue(table, page);\r\n  }\r\n  return [];\r\n}\r\n\r\nfunction getTable(tableId, page) {\r\n  const matchingTables = page.tables.filter(\r\n    table => table.id === tableId\r\n  );\r\n  if (matchingTables.length === 1) {\r\n    return matchingTables[0];\r\n  } else if (matchingTables.length === 0) {\r\n    console.log(\"No matching table found\");\r\n    return null;\r\n  } else {\r\n    console.log(\"Multiple matching tables found\");\r\n  }\r\n}\r\n\r\nfunction tableValue(table, page) {\r\n  if (!table.entries) {\r\n    return [];\r\n  }\r\n  const result = [];\r\n  const rollResult = roll(table.diceFormula);\r\n  result.push(\"Rolled a \" + rollResult + \" on table \" + table.name + \".\");\r\n  table.entries\r\n    .filter(entry => parseRange(entry.range).includes(rollResult))\r\n    .forEach(entry => result.push(...entryValue(entry.values, page)));\r\n  return result;\r\n}\r\n\r\nfunction entryValue(values, page) {\r\n  const result = []\r\n  values.forEach(value => {\r\n    if (value.type === \"text\") {\r\n      result.push(value.text);\r\n    } else if (value.type === \"roll\") {\r\n      const table = getTable(value.targetTable, page);\r\n      if (table) {\r\n        result.push(...tableValue(table, page));\r\n      }\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction roll(input, mode) {\r\n  //todo validate input\r\n  /*\r\n        ^(((\\d+d\\d+)|\\d+)(\\+|-))*((\\d+d\\d+)|\\d+)$\r\n    */\r\n  input = input.replace(/\\s/g, \"\").toLowerCase();\r\n  const additions = input.split(\"+\");\r\n  return additions\r\n    .map(addition => {\r\n      const subtractions = addition.split(\"-\");\r\n      return subtractions\r\n        .map(subtraction => {\r\n          const dice = subtraction.split(\"d\");\r\n          if (dice.length === 1) {\r\n            return parseInt(dice[0]);\r\n          } else {\r\n            const numberOfDice = parseInt(dice[0]);\r\n            const diceSize = parseInt(dice[1]);\r\n            let result = 0;\r\n            for (let i = 0; i < numberOfDice; i++) {\r\n              if (mode === ROLL_MIN) {\r\n                return 1;\r\n              }\r\n              if (mode === ROLL_MAX) {\r\n                return diceSize;\r\n              }\r\n              result += Math.floor(Math.random() * diceSize + 1);\r\n            }\r\n            return result;\r\n          }\r\n        })\r\n        .reduce((acc, cur) => acc - cur);\r\n    })\r\n    .reduce((acc, cur) => acc + cur);\r\n};\r\n\r\nfunction parseRange(input) {\r\n  //todo validate input\r\n  //\\d+(-\\d+)?(,\\d+(-\\d+)?)*\r\n  const result = [];\r\n  input = input.replace(/\\s/g, \"\");\r\n  const commaSeparated = input.split(\",\");\r\n  commaSeparated.forEach(range => {\r\n    const values = range.split(\"-\");\r\n    if (values.length === 1) {\r\n      result.push(parseInt(values[0]));\r\n    } else {\r\n      const min = parseInt(values[0]);\r\n      const max = parseInt(values[1]);\r\n      for (let i = min; i <= max; i++) {\r\n        result.push(i);\r\n      }\r\n    }\r\n  });\r\n  return result;\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { RollTable } from \"./Rolltable\";\r\nimport { Result } from \"./Result\";\r\nimport { rollTable } from \"../Util/DiceUtil\";\r\nimport { Button, Row, Col, Card } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NotFoundView } from '../NotFoundView';\r\nimport \"./index.css\"\r\n\r\nclass View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      page: null,\r\n      result: null,\r\n      pageRef: null,\r\n    };\r\n\r\n    this.handleRoll = this.handleRoll.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.pageId) {\r\n      const pageRef = this.props\r\n        .firebase\r\n        .db\r\n        .ref(\"pages\")\r\n        .child(this.props.pageId);\r\n      this.setState({\r\n        pageRef\r\n      });\r\n      pageRef.on(\"value\", snapshot => {\r\n        if (snapshot.exists()) {\r\n          this.setState({\r\n            isLoading: false,\r\n            page: snapshot.val(),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n          })\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.pageRef) {\r\n      this.state.pageRef.off(\"value\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n      (!this.state.page ?\r\n        <NotFoundView />\r\n        :\r\n        <Fragment>\r\n          <Row>\r\n            <Col xs={12} sm={6}>\r\n              <h1>{this.state.page.name}</h1>\r\n            </Col>\r\n            {this.props.authUser && this.props.authUser.uid === this.state.page.author_uid && <Col xs={12} sm={6}>\r\n              <div className=\"top-right-button\">\r\n                <Button onClick={this.handleEdit}>Edit Page</Button>\r\n              </div>\r\n            </Col>\r\n            }\r\n          </Row>\r\n          <Row className=\"view-tables\">\r\n            <Col>\r\n              {this.state.page.tables && this.state.page.tables.map(table => {\r\n                return (\r\n                  <Card key={table.id}>\r\n                    <Card.Body>\r\n                      <RollTable\r\n                        handleRoll={this.handleRoll}\r\n                        table={table}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n\r\n                );\r\n              })}\r\n            </Col>\r\n          </Row>\r\n          {this.state.result && <Row>\r\n            <Col>\r\n              <Result result={this.state.result} />\r\n            </Col>\r\n          </Row>}\r\n        </Fragment>)\r\n    );\r\n  }\r\n\r\n  handleRoll(tableId) {\r\n    const result = rollTable(tableId, this.state.page);\r\n    this.setState({\r\n      result: result\r\n    });\r\n  }\r\n\r\n  handleEdit() {\r\n    this.props.history.push(\"/edit/\" + this.props.pageId);\r\n  }\r\n}\r\n\r\nexport default withRouter(View);\r\n","import {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './index.css';\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            this.props.firebase.LoginScreen()\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport \"./index.css\";\r\n\r\nclass Pages extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pages: null,\r\n            userPagesRef: null,\r\n        }\r\n\r\n        this.handleCreatePage = this.handleCreatePage.bind(this);\r\n        this.handleImportPage = this.handleImportPage.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.pages && (\r\n                        <Fragment>\r\n                            <Row className=\"center\">\r\n                                <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                                    <h1>Your Pages</h1>\r\n                                    <div className=\"list-group\">\r\n                                        {this.state.pages.map(page => {\r\n                                            return (\r\n                                                <Link\r\n                                                    key={page.id}\r\n                                                    to={\"/view/\" + page.id}\r\n                                                    className=\"list-group-item list-group-item-action\"\r\n                                                >\r\n                                                    {page.name}\r\n                                                </Link>\r\n                                            );\r\n                                        })\r\n                                        }\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"center pages-button-row\">\r\n                                <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                                    <Button onClick={this.handleCreatePage}>Create Page</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"center pages-button-row\">\r\n                                <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                                    <div>\r\n                                        <label htmlFor=\"customFile\">\r\n                                            <div className=\"btn btn-primary\">\r\n                                                Import Page\r\n                                            </div>\r\n                                        </label>\r\n                                        <input type=\"file\" accept=\"application/json\" hidden id=\"customFile\" onChange={this.handleImportPage} />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.authUser) {\r\n            const userPagesRef = this.props.firebase.db.ref(\"pages\").orderByChild(\"author_uid\").equalTo(this.props.authUser.uid);\r\n            this.setState({\r\n                userPagesRef\r\n            })\r\n            userPagesRef.on(\"value\", snapshot => {\r\n                const pages = [];\r\n                snapshot.forEach(data => {\r\n                    pages.push({ ...data.val(), id: data.key });\r\n                });\r\n                pages.sort((a,b) =>  a.created_at < b.created_at ? 1:-1);\r\n                this.setState({\r\n                    pages\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.userPagesRef) {\r\n            this.state.userPagesRef.off(\"value\");\r\n        }\r\n    }\r\n\r\n    handleCreatePage() {\r\n        this.props.history.push(\"/create\");\r\n    }\r\n\r\n    handleImportPage(e) {\r\n        const fileList = e.target.files;\r\n        if(fileList.length > 0){\r\n            const file = fileList[0];\r\n            var reader = new FileReader();\r\n            reader.readAsText(file);\r\n            reader.onload = (e) => {\r\n                const jsonString = e.target.result;\r\n                const page = JSON.parse(jsonString);\r\n                this.props.onImportPage(page);\r\n                this.props.history.push(\"/import\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Pages);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport Editor from \"./Editor\";\nimport View from \"./View\";\nimport Login from './Login';\nimport Pages from './Pages';\nimport { NotFoundView } from './NotFoundView';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userSet: false,\n      authUser: null,\n      importPage: null,\n    };\n\n    this.Home = this.Home.bind(this);\n    this.Login = this.Login.bind(this);\n    this.Pages = this.Pages.bind(this);\n    this.Create = this.Create.bind(this);\n    this.Edit = this.Edit.bind(this);\n    this.View = this.View.bind(this);\n    this.Import = this.Import.bind(this);\n    this.handleImportPage = this.handleImportPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.firebase.auth.onAuthStateChanged(authUser => {\n      authUser\n        ? this.setState({ authUser, userSet: true })\n        : this.setState({ authUser: null, userSet: true });\n    });\n  }\n\n  render() {\n    return this.state.userSet && (\n      <Router>\n        <Navigation firebase={this.props.firebase} authUser={this.state.authUser} />\n        <Container fluid>\n          <Row>\n            <Col>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Switch>\n                <Route exact path=\"/\" component={this.Home} />\n                <Route exact path=\"/login\" component={this.Login} />\n                <this.PrivateRoute path=\"/pages\" component={this.Pages} />\n                <this.PrivateRoute path=\"/create\" component={this.Create} />\n                <this.PrivateRoute path=\"/import\" component={this.Import} />\n                <this.PrivateRoute path=\"/edit/:pageId\" component={this.Edit} />\n                <Route path=\"/view/:pageId\" component={this.View} />\n                <Route component={NotFoundView} />\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n    );\n  }\n\n  Home() {\n    return (\n      <Home firebase={this.props.firebase} authUser={this.state.authUser} />\n    )\n  }\n\n  Login() {\n    return (\n      <Login firebase={this.props.firebase} />\n    )\n  }\n\n  Pages() {\n    return (\n      <Pages firebase={this.props.firebase} authUser={this.state.authUser} onImportPage={this.handleImportPage}/>\n    );\n  }\n\n  Create() {\n    return (\n      <Editor \n        firebase={this.props.firebase}\n        authUser={this.state.authUser}\n      />\n    );\n  }\n\n  Import() {\n    if(this.state.importPage) {\n      return (\n        <Editor \n          firebase={this.props.firebase}\n          authUser={this.state.authUser}\n          importPage={this.state.importPage}\n        />\n      );\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  }\n\n  Edit({ match }) {\n    return (\n      <Editor\n        firebase={this.props.firebase}\n        authUser={this.state.authUser}\n        pageId={match.params.pageId}\n      />\n    );\n  }\n\n  View({ match }) {\n    return (\n      <View\n        firebase={this.props.firebase}\n        authUser={this.state.authUser}\n        pageId={match.params.pageId}\n      />\n    );\n  }\n\n  PrivateRoute = ({ component: Component, ...rest }) => (\n    this.state.userSet &&\n    <Route {...rest} render={(props) => (\n      this.state.authUser\n        ? <Component {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n    )} />\n  );\n\n  handleImportPage(page){\n    this.setState({\n      importPage: page\n    });\n  }\n}\n","import firebase from 'firebase';\r\nimport {StyledFirebaseAuth} from 'react-firebaseui';\r\n\r\nimport React from 'react';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDm_aiHYiZQc4ypOHIwywQ3J8JFPMRWbrk\",\r\n  authDomain: \"rolltable.firebaseapp.com\",\r\n  databaseURL: \"https://rolltable.firebaseio.com\",\r\n  projectId: \"rolltable\",\r\n  storageBucket: \"rolltable.appspot.com\",\r\n  messagingSenderId: \"404433756558\"\r\n};\r\n\r\nconst uiConfig = ({\r\n  signInSuccessUrl: '/rolltables/#/pages',\r\n  signInOptions: [\r\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n  ],\r\n});\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    firebase.initializeApp(config);\r\n    this.auth = firebase.auth();\r\n    this.db = firebase.database();\r\n    this.serverTimestamp = firebase.database.ServerValue.TIMESTAMP;\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  LoginScreen = (props) => <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={this.auth} />\r\n}\r\n\r\nexport const FirebaseContext = React.createContext(null);\r\n\r\nexport default Firebase;","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport Firebase, {FirebaseContext} from './firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <FirebaseContext.Consumer>\n            {\n                firebase => <App firebase={firebase} />\n            }   \n        </FirebaseContext.Consumer>\n    </FirebaseContext.Provider>\n,\ndocument.getElementById(\"root\"));\n"],"sourceRoot":""}