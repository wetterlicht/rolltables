{"version":3,"sources":["Navigation/index.js","Home/index.js","Editor/TableEditor/EntryEditor/ValueEditor.js","Editor/TableEditor/EntryEditor/index.js","Editor/TableEditor/EntryModal.js","Editor/TableEditor/index.js","NotFoundView.js","Editor/index.js","View/Rolltable/index.js","Util/DiceUtil.js","View/Result/index.js","View/ResultModal/index.js","View/index.js","Login/index.js","Pages/index.js","App.js","firebase.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","this","props","authUser","role","onClick","firebase","doSignOut","Component","Home","_Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pages","inherits","createClass","key","value","_this2","unsubscribe","db","collection","where","orderBy","limit","onSnapshot","snapshot","forEach","data","push","objectSpread","id","reverse","setState","Row","Col","sm","span","offset","md","map","page","name","ValueEditor","handleTypeChange","bind","assertThisInitialized","handleTextChange","handleTargetTableChange","react","Form","Group","controlId","Label","Control","as","type","onChange","rows","text","targetTable","tables","table","e","onTypeChange","target","onTextChange","onTargetTableChange","EntryEditor","apply","arguments","range","onRangeChange","label","onLabelChange","values","Button","variant","onDeleteValue","aria-label","ValueEditor_ValueEditor","onAddValue","EntryModal","handleRangeChange","handleLabelChange","handleAddValue","handleDeleteValue","handleSaveEntry","handleValueTypeChange","handleValueTextChange","handleValueTargetTableChange","Modal","show","onHide","onEntryModalClose","Header","closeButton","Title","Body","EntryEditor_EntryEditor","Footer","concat","toConsumableArray","uuid","v4","valueId","window","confirm","updatedValues","filter","entry","onSaveEntry","tableId","typeValue","textValue","targetTableValue","DEFAULT_EDIT_ENTRY_PROPS","TableEditor","showEntryModal","editEntryProps","open","handleToggle","handleNameChange","handleHeaderChange","handleDiceFormulaChange","handleEntryModalShow","handleEntryModalClose","handleEntryClick","handleDeleteTable","handleDeleteEntry","Collapse","in","Table","responsive","striped","bordered","hover","diceFormula","header","entries","EntryModal_EntryModal","assign","getEntryModalProps","onNameChange","onHeaderChange","onDiceFormulaChange","entryId","find","en","onDeleteEntry","onDeleteTable","NotFoundView","EMPTY_PAGE","isPrivate","Editor","isLoading","saving","handlePageNameChange","handleAddTable","handleTableNameChange","handleExportPage","handleSavePage","handleDeletePage","handleIsPrivateChange","pageId","doc","exists","author_uid","uid","importPage","_this3","xs","FormGroup","FormLabel","FormControl","Check","checked","Card","TableEditor_TableEditor","NotFoundView_NotFoundView","updatedTables","newTable","entryIndex","findIndex","splice","updatedEntries","_this$state$page","exportData","created_at","objectWithoutProperties","dataStr","JSON","stringify","blob","Blob","FileSaver","saveAs","_this4","pagesRef","set","serverTimestamp","error","console","log","then","history","_this5","delete","withRouter","RollTable","handleRoll","ROLL_MIN","ROLL_MAX","getTable","matchingTables","length","tableValue","mode","result","rollResult","replace","toLowerCase","split","addition","subtractions","subtraction","dice","parseInt","numberOfDice","diceSize","i","Math","floor","random","reduce","acc","cur","input","min","max","parseRange","includes","entryValue","Result","_ref","ResultModal","Result_Result","View","showResultModal","handleEdit","handleHideResultModal","Rolltable_RollTable","ResultModal_ResultModal","rollTable","Login","LoginScreen","Pages","handleCreatePage","handleImportPage","htmlFor","accept","hidden","sort","b","fileList","files","file","reader","FileReader","readAsText","onload","jsonString","parse","onImportPage","App","PrivateRoute","component","rest","userSet","react_router","render","pathname","from","location","Create","Edit","Import","auth","onAuthStateChanged","Navigation_Navigation","Container","fluid","exact","path","src_Home","src_Login_0","src_Pages_0","src_Editor_0","_ref2","match","params","_ref3","src_View_0","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","uiConfig","signInSuccessUrl","signInOptions","FacebookAuthProvider","PROVIDER_ID","GoogleAuthProvider","TwitterAuthProvider","EmailAuthProvider","FirebaseContext","React","createContext","Firebase","signOut","react_firebaseui","firebaseAuth","initializeApp","firestore","FieldValue","ReactDOM","Provider","Consumer","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1e68e729.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport './index.css';\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <NavLink to=\"/\" className=\"navbar-brand\"><i className=\"fas fa-dice-d20\"></i> Rolltables</NavLink>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    {this.props.authUser &&\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/pages\" className=\"nav-link\">Your Pages</NavLink>\r\n                        </li>\r\n                    }\r\n                </ul>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        {this.props.authUser ?\r\n                            <span role=\"button\" className=\"nav-logout nav-link\" onClick={this.props.firebase.doSignOut}>Logout</span>\r\n                            :\r\n                            <NavLink to=\"/login\" className=\"nav-link\">Login</NavLink>\r\n                        }\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nexport class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pages: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n            this.unsubscribe = this.props.firebase.db\r\n            .collection(\"pages\")\r\n            .where(\"isPrivate\", \"==\", false)\r\n            .orderBy(\"created_at\", \"desc\")\r\n            .limit(5)\r\n            .onSnapshot(snapshot => {\r\n                const pages = [];\r\n                snapshot.forEach(data => {\r\n                    pages.push({ ...data.data(), id: data.id });\r\n                });\r\n                pages.reverse();\r\n                this.setState({\r\n                    pages\r\n                });\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribe();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center\">\r\n                <h1>Welcome!</h1>\r\n                {!this.props.authUser ?\r\n                    <p>\r\n                        Check out the latest pages below or <Link to=\"/login\">login</Link> to start creating your own!\r\n                    </p>\r\n                    :\r\n                    <p>\r\n                        Check out the latest pages below or start <Link to=\"/pages\">creating your own!</Link>\r\n                    </p>\r\n                }\r\n                {this.state.pages && \r\n                    <Row className=\"center\">\r\n                    <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                        <h2>Latest Pages</h2>\r\n                        <div className=\"list-group\">\r\n                            {this.state.pages.map(page => {\r\n                                return (\r\n                                    <Link\r\n                                        key={page.id}\r\n                                        to={\"/view/\" + page.id}\r\n                                        className=\"list-group-item list-group-item-action\"\r\n                                    >\r\n                                        {page.name}\r\n                                    </Link>\r\n                                );\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component, Fragment } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport const VALUE_TYPE_TEXT = \"text\";\r\nexport const VALUE_TYPE_ROLL = \"roll\";\r\n\r\nexport class ValueEditor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleTypeChange = this.handleTypeChange.bind(this);\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleTargetTableChange = this.handleTargetTableChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Form.Group controlId=\"formGroupType\">\r\n                    <Form.Label>Type: </Form.Label>\r\n                    <Form.Control as=\"select\" value={this.props.value.type} onChange={this.handleTypeChange} >\r\n                        <option value={VALUE_TYPE_TEXT}>Text</option>\r\n                        <option value={VALUE_TYPE_ROLL}>Roll</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n              {this.props.value.type === \"text\" &&\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Text: </Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" value={this.props.value.text} onChange={this.handleTextChange} />\r\n                    </Form.Group>\r\n                }\r\n                {this.props.value.type === \"roll\" &&\r\n                    <Form.Group controlId=\"formGroupRoll\">\r\n                        <Form.Label>Table: </Form.Label>\r\n                        <Form.Control as=\"select\" value={this.props.value.targetTable} onChange={this.handleTargetTableChange}>\r\n                            {this.props.tables.map(table =>\r\n                                <option key={table.id} value={table.id} >{table.name}</option>\r\n                            )}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    handleTypeChange(e) {\r\n        this.props.onTypeChange(this.props.value.id, e.target.value);\r\n    }\r\n\r\n    handleTextChange(e) {\r\n        this.props.onTextChange(this.props.value.id, e.target.value);\r\n    }\r\n\r\n    handleTargetTableChange(e) {\r\n        this.props.onTargetTableChange(this.props.value.id, e.target.value);\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { ValueEditor } from './ValueEditor';\r\n\r\nexport class EntryEditor extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Form.Group controlId=\"range\">\r\n                    <Form.Label>Range</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.props.range} onChange={this.props.onRangeChange} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"label\">\r\n                    <Form.Label>Label</Form.Label>\r\n                    <Form.Control type=\"text\" value={this.props.label} onChange={this.props.onLabelChange} />\r\n                </Form.Group>\r\n                <hr />\r\n                {this.props.values && this.props.values.map(value =>\r\n                    <Fragment key={value.id}>\r\n                        <fieldset >\r\n                                <legend className=\"d-flex justify-content-between\">\r\n                                    Value\r\n                                    <Button\r\n                                    className=\"delete-value\"\r\n                                    variant=\"danger\"\r\n                                    onClick={this.props.onDeleteValue.bind(this, value.id)}\r\n                                    aria-label=\"Delete Value\"\r\n                                >&times;\r\n                            </Button>\r\n                            </legend>\r\n                            <ValueEditor\r\n                                value={value}\r\n                                tables={this.props.tables}\r\n                                onTypeChange={this.props.onTypeChange}\r\n                                onTextChange={this.props.onTextChange}\r\n                                onTargetTableChange={this.props.onTargetTableChange}\r\n                            />\r\n                        </fieldset>\r\n                        <hr />\r\n                    </Fragment>\r\n                )}\r\n                <Form.Group controlId=\"addEntry\">\r\n                    <Button onClick={this.props.onAddValue}>Add Value</Button>\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { EntryEditor } from \"./EntryEditor\";\r\nimport uuid from \"uuid\";\r\n\r\nexport class EntryModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      range: props.range,\r\n      values: props.values,\r\n      label: props.label\r\n    };\r\n\r\n    this.handleRangeChange = this.handleRangeChange.bind(this);\r\n    this.handleLabelChange = this.handleLabelChange.bind(this);\r\n    this.handleAddValue = this.handleAddValue.bind(this);\r\n    this.handleDeleteValue = this.handleDeleteValue.bind(this);\r\n    this.handleSaveEntry = this.handleSaveEntry.bind(this);\r\n    this.handleValueTypeChange = this.handleValueTypeChange.bind(this);\r\n    this.handleValueTextChange = this.handleValueTextChange.bind(this);\r\n    this.handleValueTargetTableChange = this.handleValueTargetTableChange.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show} onHide={this.props.onEntryModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{this.props.id ? \"Edit Entry\" : \"Add Entry\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <EntryEditor\r\n            range={this.state.range}\r\n            label={this.state.label}\r\n            values={this.state.values}\r\n            tables={this.props.tables}\r\n            onAddValue={this.handleAddValue}\r\n            onDeleteValue={this.handleDeleteValue}\r\n            onRangeChange={this.handleRangeChange}\r\n            onLabelChange={this.handleLabelChange}\r\n            onTypeChange={this.handleValueTypeChange}\r\n            onTextChange={this.handleValueTextChange}\r\n            onTargetTableChange={this.handleValueTargetTableChange}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.onEntryModalClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSaveEntry}>\r\n            {this.props.id ? \"Save Entry\" : \"Add Entry\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  handleRangeChange(e) {\r\n    //todo validate\r\n    this.setState({\r\n      range: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLabelChange(e) {\r\n    this.setState({\r\n      label: e.target.value\r\n    });\r\n  }\r\n\r\n  handleAddValue() {\r\n    this.setState({\r\n      values: [\r\n        ...this.state.values,\r\n        {\r\n          id: uuid.v4(),\r\n          type: \"text\",\r\n          text: \"\",\r\n          table: \"\"\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleDeleteValue(valueId) {\r\n    const confirm = window.confirm(\"Are you sure you want to delete this value?\");\r\n    if (confirm) {\r\n      const updatedValues = this.state.values.filter(value => {\r\n        return value.id !== valueId;\r\n      })\r\n      this.setState({\r\n        values: updatedValues\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSaveEntry() {\r\n    const entry = {\r\n      id: this.props.id ? this.props.id : uuid.v4(),\r\n      range: this.state.range,\r\n      label: this.state.label,\r\n      values: this.state.values\r\n    };\r\n    this.props.onSaveEntry(this.props.tableId, entry);\r\n    this.props.onEntryModalClose();\r\n  }\r\n\r\n  handleValueTypeChange(valueId, typeValue) {\r\n    const updatedValues = this.state.values.map(value => {\r\n      if (value.id === valueId) {\r\n        return { ...value, type: typeValue };\r\n      }\r\n      return value;\r\n    });\r\n    this.setState({\r\n      values: updatedValues\r\n    });\r\n  }\r\n\r\n  handleValueTextChange(valueId, textValue) {\r\n    const updatedValues = this.state.values.map(value => {\r\n      if (value.id === valueId) {\r\n        return { ...value, text: textValue };\r\n      }\r\n      return value;\r\n    });\r\n    this.setState({\r\n      values: updatedValues\r\n    });\r\n  }\r\n\r\n  handleValueTargetTableChange(valueId, targetTableValue) {\r\n    const updatedValues = this.state.values.map(value => {\r\n      if (value.id === valueId) {\r\n        return { ...value, targetTable: targetTableValue };\r\n      }\r\n      return value;\r\n    });\r\n    this.setState({\r\n      values: updatedValues\r\n    });\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Form, Button, Table, Collapse } from \"react-bootstrap\";\r\nimport { EntryModal } from \"./EntryModal\";\r\n\r\nconst DEFAULT_EDIT_ENTRY_PROPS = {\r\n    id: '',\r\n    range: [],\r\n    label: '',\r\n    values: [],\r\n}\r\n\r\nexport class TableEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showEntryModal: false,\r\n            editEntryProps: DEFAULT_EDIT_ENTRY_PROPS,\r\n            open: false,\r\n        };\r\n\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleHeaderChange = this.handleHeaderChange.bind(this);\r\n        this.handleDiceFormulaChange = this.handleDiceFormulaChange.bind(this);\r\n        this.handleEntryModalShow = this.handleEntryModalShow.bind(this);\r\n        this.handleEntryModalClose = this.handleEntryModalClose.bind(this);\r\n        this.handleEntryClick = this.handleEntryClick.bind(this);\r\n        this.handleDeleteTable = this.handleDeleteTable.bind(this);\r\n        this.handleDeleteEntry = this.handleDeleteEntry.bind(this);\r\n    }\r\n\r\n    getEntryModalProps() {\r\n        return {\r\n            show: this.state.showEntryModal,\r\n            tables: this.props.tables,\r\n            tableId: this.props.table.id,\r\n            onSaveEntry: this.props.onSaveEntry,\r\n            onEntryModalClose: this.handleEntryModalClose\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"d-flex\">\r\n                    <div\r\n                        className=\"table-title d-flex justify-content-between\"\r\n                        onClick={this.handleToggle}\r\n                    >\r\n                        <h5>{this.props.table.name}</h5>\r\n                        <i className={\"fas fa-chevron-\" + (this.state.open ? \"up\" : \"down\")} />\r\n                    </div>\r\n                </div>\r\n                <Collapse in={this.state.open}>\r\n                    <div className=\"table-container\">\r\n                    <Form>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Table Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={this.props.table.name}\r\n                                onChange={this.handleNameChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Table responsive striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <Form.Group controlId=\"diceFormula\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={this.props.table.diceFormula}\r\n                                                onChange={this.handleDiceFormulaChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </th>\r\n                                    <th>\r\n                                        <Form.Group controlId=\"header\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={this.props.table.header}\r\n                                                onChange={this.handleHeaderChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.table.entries && this.props.table.entries.map(entry => (\r\n                                    <tr key={entry.id} >\r\n                                        <td className=\"td-entry\" onClick={this.handleEntryClick.bind(this, entry.id)}>{entry.range}</td>\r\n                                        <td className=\"td-entry\" onClick={this.handleEntryClick.bind(this, entry.id)}>{entry.label}</td>\r\n                                        <td className=\"td-fit\">\r\n                                            <Button\r\n                                                variant=\"danger\"\r\n                                                onClick={this.handleDeleteEntry.bind(this, entry.id)}\r\n                                                aria-label=\"Delete Entry\"\r\n                                            >&times;</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"inline-buttons\">\r\n                            <Form.Group controlId=\"addEntry\">\r\n                                <Button onClick={this.handleEntryModalShow}>Add Entry</Button>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"deleteTable\">\r\n                                <Button variant=\"danger\" onClick={this.handleDeleteTable}>Delete Table</Button>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </Form>\r\n                    </div>\r\n                </Collapse>\r\n                {\r\n                    this.state.showEntryModal &&\r\n                    <EntryModal\r\n                        {...this.getEntryModalProps()}\r\n                        {...this.state.editEntryProps}\r\n                    />\r\n                }\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n\r\n    handleToggle() {\r\n        this.setState({\r\n            open: !this.state.open,\r\n        });\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        this.props.onNameChange(this.props.table.id, e.target.value);\r\n    }\r\n\r\n    handleHeaderChange(e) {\r\n        this.props.onHeaderChange(this.props.table.id, e.target.value);\r\n    }\r\n\r\n    handleDiceFormulaChange(e) {\r\n        this.props.onDiceFormulaChange(this.props.table.id, e.target.value);\r\n    }\r\n\r\n    handleEntryModalShow() {\r\n        this.setState({\r\n            showEntryModal: true\r\n        });\r\n    }\r\n\r\n    handleEntryModalClose() {\r\n        this.setState({\r\n            showEntryModal: false,\r\n            editEntryProps: DEFAULT_EDIT_ENTRY_PROPS,\r\n        });\r\n    }\r\n\r\n    handleEntryClick(entryId) {\r\n        const entry = this.props.table.entries.find(en => en.id === entryId);\r\n        if (entry) {\r\n            this.setState({\r\n                editEntryProps: {\r\n                    id: entryId,\r\n                    range: entry.range,\r\n                    label: entry.label,\r\n                    values: entry.values,\r\n                }\r\n            });\r\n            this.handleEntryModalShow();\r\n        }\r\n    }\r\n\r\n    handleDeleteEntry(entryId) {\r\n        const result = window.confirm(\"Are you sure you want to delete this entry?\");\r\n        if (result) {\r\n            this.props.onDeleteEntry(this.props.table.id, entryId);\r\n        }\r\n    }\r\n\r\n    handleDeleteTable() {\r\n        const result = window.confirm(\"Are you sure you want to delete this table?\");\r\n        if (result) {\r\n            this.props.onDeleteTable(this.props.table.id);\r\n        }\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport const NotFoundView = (props) => \r\n<Fragment>\r\n<Row>\r\n  <Col>\r\n    <h1>Page not found</h1>\r\n  </Col>\r\n</Row>\r\n</Fragment>","import React, { Component, Fragment } from \"react\";\r\nimport { Button, Card, Row, Col, Form, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport { TableEditor } from \"./TableEditor\";\r\nimport \"./index.css\";\r\nimport uuid from \"uuid\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NotFoundView } from '../NotFoundView';\r\nimport FileSaver from 'file-saver';\r\n\r\nconst EMPTY_PAGE = {\r\n  name: \"New Page\",\r\n  tables: [],\r\n  isPrivate: false,\r\n};\r\n\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      page: null,\r\n      saving: false,\r\n    };\r\n\r\n    this.handlePageNameChange = this.handlePageNameChange.bind(this);\r\n    this.handleAddTable = this.handleAddTable.bind(this);\r\n    this.handleDeleteTable = this.handleDeleteTable.bind(this);\r\n    this.handleSaveEntry = this.handleSaveEntry.bind(this);\r\n    this.handleDeleteEntry = this.handleDeleteEntry.bind(this);\r\n    this.handleDiceFormulaChange = this.handleDiceFormulaChange.bind(this);\r\n    this.handleTableNameChange = this.handleTableNameChange.bind(this);\r\n    this.handleHeaderChange = this.handleHeaderChange.bind(this);\r\n    this.handlePageNameChange = this.handlePageNameChange.bind(this);\r\n    this.handleExportPage = this.handleExportPage.bind(this);\r\n    this.handleSavePage = this.handleSavePage.bind(this);\r\n    this.handleDeletePage = this.handleDeletePage.bind(this);\r\n    this.handleIsPrivateChange = this.handleIsPrivateChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.pageId) {\r\n      this.unsubscribe = this.props\r\n        .firebase\r\n        .db\r\n        .collection(\"pages\")\r\n        .doc(this.props.pageId)\r\n        .onSnapshot(doc => {\r\n        if (doc.exists) {\r\n          if (doc.data().author_uid === this.props.authUser.uid) {\r\n            this.setState({\r\n              isLoading: false,\r\n              page: doc.data(),\r\n            });\r\n          } else {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n          })\r\n        }\r\n      });\r\n    } else if (this.props.importPage) {\r\n      this.setState({\r\n        isLoading: false,\r\n        page: this.props.importPage\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoading: false,\r\n        page: EMPTY_PAGE\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n      (!this.state.page ?\r\n        <NotFoundView />\r\n        :\r\n        <Fragment>\r\n          <Row>\r\n            <Col xs={12} sm={6}>\r\n              <FormGroup controlId=\"pageName\">\r\n                <FormLabel>Page Name</FormLabel>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  value={this.state.page.name}\r\n                  onChange={this.handlePageNameChange}\r\n                >\r\n                </FormControl>\r\n              </FormGroup>\r\n              <FormGroup controlId=\"pageName\">\r\n                <FormLabel>Visibility: </FormLabel>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  id=\"private\"\r\n                  label=\"Private\"\r\n                  checked={this.state.page.isPrivate}\r\n                  onChange={this.handleIsPrivateChange}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs={12} sm={6}>\r\n              <div className=\"top-right-button\">\r\n                <Row>\r\n                  {this.state.page.author_uid &&\r\n                    <Fragment>\r\n                      <Col>\r\n                        <Button onClick={this.handleExportPage}>Export Page</Button>\r\n                      </Col>\r\n                      <Col>\r\n                        <Button variant=\"danger\" onClick={this.handleDeletePage}>Delete Page</Button>\r\n                      </Col>\r\n                    </Fragment>\r\n\r\n                  }\r\n                  <Col>\r\n                    {this.state.saving ? (\r\n                      <Button variant=\"success\">Saving...</Button>\r\n                    ) : (\r\n                        <Button onClick={this.handleSavePage} variant=\"success\">\r\n                          Save Page\r\n                </Button>\r\n                      )}\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"button-row\">\r\n            <Col>\r\n              <Button onClick={this.handleAddTable}>Add Table</Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              {this.state.page.tables && this.state.page.tables.map(table => {\r\n                return (\r\n                  <Card key={table.id}>\r\n                    <Card.Body>\r\n                      <TableEditor\r\n                        table={table}\r\n                        tables={this.state.page.tables}\r\n                        onDiceFormulaChange={this.handleDiceFormulaChange}\r\n                        onSaveEntry={this.handleSaveEntry}\r\n                        onDeleteEntry={this.handleDeleteEntry}\r\n                        onNameChange={this.handleTableNameChange}\r\n                        onHeaderChange={this.handleHeaderChange}\r\n                        onDeleteTable={this.handleDeleteTable}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </Col>\r\n          </Row>\r\n        </Fragment>)\r\n    );\r\n  }\r\n\r\n  handlePageNameChange(e) {\r\n    const name = e.target.value;\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        name: name\r\n      }\r\n    });\r\n  }\r\n\r\n  handleAddTable() {\r\n    const newTable = {\r\n      id: uuid.v4(),\r\n      name: \"New Table\",\r\n      diceFormula: \"1d20\",\r\n      header: \"Treasure\",\r\n      entries: []\r\n    }\r\n    let updatedTables;\r\n    if (this.state.page.tables) {\r\n      updatedTables = [\r\n        ...this.state.page.tables,\r\n        newTable\r\n      ];\r\n    } else {\r\n      updatedTables = [\r\n        newTable\r\n      ]\r\n    }\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables,\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDeleteTable(id) {\r\n    const updatedTables = this.state.page.tables.filter(table => {\r\n      return table.id !== id\r\n    });\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDiceFormulaChange(tableId, diceFormula) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        table.diceFormula = diceFormula;\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      tables: updatedTables\r\n    });\r\n  }\r\n\r\n  handleSaveEntry(tableId, entry) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        if (!table.entries) {\r\n          table.entries = [{ ...entry }];\r\n        } else {\r\n          const entryIndex = table.entries.findIndex(e => e.id === entry.id);\r\n          if (entryIndex === -1) {\r\n            table.entries = [...table.entries, { ...entry }];\r\n          } else {\r\n            const updatedTable = { ...table };\r\n            updatedTable.entries.splice(entryIndex, 1, entry);\r\n          }\r\n        }\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDeleteEntry(tableId, entryId) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        if (table.entries) {\r\n          const updatedEntries = table.entries.filter(entry => {\r\n            return entry.id !== entryId;\r\n          });\r\n          table.entries = updatedEntries;\r\n        }\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n        tables: updatedTables\r\n      }\r\n    });\r\n  }\r\n\r\n  handleTableNameChange(tableId, name) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        table.name = name;\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      tables: updatedTables\r\n    });\r\n  }\r\n\r\n  handleHeaderChange(tableId, header) {\r\n    const updatedTables = this.state.page.tables.map(table => {\r\n      if (table.id === tableId) {\r\n        table.header = header;\r\n      }\r\n      return table;\r\n    });\r\n    this.setState({\r\n      tables: updatedTables\r\n    });\r\n  }\r\n\r\n  handleExportPage() {\r\n    const { author_uid, created_at, ...exportData } = this.state.page;\r\n    const dataStr = JSON.stringify(exportData);\r\n    const blob = new Blob([dataStr], { type: \"text/plain;charset=utf-8\" });\r\n    const defaultFileName = \"data.json\";\r\n    FileSaver.saveAs(blob, defaultFileName);\r\n  }\r\n\r\n  handleSavePage() {\r\n    const pagesRef = this.props.firebase.db.collection(\"pages\");\r\n    let page;\r\n    if (this.props.pageId) {\r\n      page = pagesRef.doc(this.props.pageId)\r\n    } else {\r\n      page = pagesRef.doc();\r\n    }\r\n    page.set({ ...this.state.page, author_uid: this.props.authUser.uid, created_at: this.props.firebase.serverTimestamp() }, error => {\r\n      if (error) {\r\n        console.log(error);\r\n      }\r\n    })\r\n      .then(() => {\r\n        this.props.history.push(\"/view/\" + page.id);\r\n      });\r\n  }\r\n\r\n  handleDeletePage() {\r\n    const confirm = window.confirm(\"Do you really want to delete this page?\");\r\n    if (confirm) {\r\n      this.props.firebase.db\r\n        .collection(\"pages\")\r\n        .doc(this.props.pageId)\r\n        .delete()\r\n        .then(() => {\r\n          this.props.history.push(\"/pages\");\r\n        });\r\n    }\r\n  }\r\n\r\n  handleIsPrivateChange(e) {\r\n    const isPrivate = e.target.checked;\r\n    this.setState({\r\n      page: {\r\n        ...this.state.page,\r\n       isPrivate\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default withRouter(Editor);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Button, Table, Collapse } from \"react-bootstrap\";\r\n\r\nexport class RollTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n    }\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.props.handleRoll(this.props.table.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"d-flex\">\r\n          <Button className=\"roll-button\" onClick={this.onClick}>Roll</Button>\r\n          <div\r\n            className=\"table-title d-flex justify-content-between\"\r\n            onClick={this.handleToggle}\r\n          >\r\n            <h5>{this.props.table.name}</h5>\r\n            <i className={\"fas fa-chevron-\" + (this.state.open ? \"up\" : \"down\")}/>\r\n          </div>\r\n        </div>\r\n        <Collapse in={this.state.open}>\r\n          <div className=\"table-container\">\r\n            <Table responsive striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th><div className=\"rolltable-dice-header\"><span className=\"rolltable-dice-formula\">{this.props.table.diceFormula}</span></div></th>\r\n                  <th className=\"rolltable-header\">{this.props.table.header}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.table.entries && this.props.table.entries.map(entry => (\r\n                  <tr key={entry.id}>\r\n                    <td>{entry.range}</td>\r\n                    <td>{entry.label}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Collapse>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  handleToggle() {\r\n    this.setState({\r\n      open: !this.state.open,\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport uuid from 'uuid';\r\n\r\nexport const ROLL_MIN = \"min\";\r\nexport const ROLL_MAX = \"max\";\r\n\r\nexport const rollTable = (tableId, page) => {\r\n  const table = getTable(tableId, page);\r\n  if (table) {\r\n    return tableValue(table, page);\r\n  }\r\n  return [];\r\n}\r\n\r\nfunction getTable(tableId, page) {\r\n  const matchingTables = page.tables.filter(\r\n    table => table.id === tableId\r\n  );\r\n  if (matchingTables.length === 1) {\r\n    return matchingTables[0];\r\n  } else if (matchingTables.length === 0) {\r\n    console.log(\"No matching table found\");\r\n    return null;\r\n  } else {\r\n    console.log(\"Multiple matching tables found\");\r\n  }\r\n}\r\n\r\nfunction tableValue(table, page) {\r\n  if (!table.entries) {\r\n    return [];\r\n  }\r\n  const result = [];\r\n  const rollResult = roll(table.diceFormula);\r\n  result.push(<div key={uuid.v4()} className=\"rollText\">Rolled a {rollResult} on table {table.name}.</div>);\r\n  table.entries\r\n    .filter(entry => parseRange(entry.range).includes(rollResult))\r\n    .forEach(entry => {\r\n      result.push(<div key={uuid.v4()} className=\"labelText\" >{entry.label}</div>)\r\n      result.push(...entryValue(entry, page))\r\n    });\r\n  return result;\r\n}\r\n\r\nfunction entryValue(entry, page) {\r\n  const result = []\r\n  entry.values && entry.values.forEach(value => {\r\n    if (value.type === \"text\") {\r\n      result.push(<div key={uuid.v4()} className=\"valueText\">{value.text}</div>);\r\n    } else if (value.type === \"roll\") {\r\n      const table = getTable(value.targetTable, page);\r\n      if (table) {\r\n        result.push(...tableValue(table, page));\r\n      }\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction roll(input, mode) {\r\n  //todo validate input\r\n  /*\r\n        ^(((\\d+d\\d+)|\\d+)(\\+|-))*((\\d+d\\d+)|\\d+)$\r\n    */\r\n  input = input.replace(/\\s/g, \"\").toLowerCase();\r\n  const additions = input.split(\"+\");\r\n  return additions\r\n    .map(addition => {\r\n      const subtractions = addition.split(\"-\");\r\n      return subtractions\r\n        .map(subtraction => {\r\n          const dice = subtraction.split(\"d\");\r\n          if (dice.length === 1) {\r\n            return parseInt(dice[0]);\r\n          } else {\r\n            const numberOfDice = parseInt(dice[0]);\r\n            const diceSize = parseInt(dice[1]);\r\n            let result = 0;\r\n            for (let i = 0; i < numberOfDice; i++) {\r\n              if (mode === ROLL_MIN) {\r\n                return 1;\r\n              }\r\n              if (mode === ROLL_MAX) {\r\n                return diceSize;\r\n              }\r\n              result += Math.floor(Math.random() * diceSize + 1);\r\n            }\r\n            return result;\r\n          }\r\n        })\r\n        .reduce((acc, cur) => acc - cur);\r\n    })\r\n    .reduce((acc, cur) => acc + cur);\r\n};\r\n\r\nfunction parseRange(input) {\r\n  //todo validate input\r\n  //\\d+(-\\d+)?(,\\d+(-\\d+)?)*\r\n  const result = [];\r\n  input = input.replace(/\\s/g, \"\");\r\n  const commaSeparated = input.split(\",\");\r\n  commaSeparated.forEach(range => {\r\n    const values = range.split(\"-\");\r\n    if (values.length === 1) {\r\n      result.push(parseInt(values[0]));\r\n    } else {\r\n      const min = parseInt(values[0]);\r\n      const max = parseInt(values[1]);\r\n      for (let i = min; i <= max; i++) {\r\n        result.push(i);\r\n      }\r\n    }\r\n  });\r\n  return result;\r\n};\r\n","import React from \"react\";\r\nimport './index.css';\r\n\r\nexport const Result = ({ result }) => {\r\n  if(result){\r\n    return (\r\n          <div className=\"result-text\">\r\n            {result}\r\n          </div>\r\n    );\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Result } from \"../Result\";\r\n\r\nexport class ResultModal extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show} onHide={this.props.onHide}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Result</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Result result={this.props.result}/>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { RollTable } from \"./Rolltable\";\r\nimport { rollTable } from \"../Util/DiceUtil\";\r\nimport { Button, Row, Col, Card } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NotFoundView } from '../NotFoundView';\r\nimport {ResultModal} from './ResultModal';\r\nimport \"./index.css\"\r\n\r\nclass View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      page: null,\r\n      result: null,\r\n      showResultModal: false,\r\n    };\r\n\r\n    this.handleRoll = this.handleRoll.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleHideResultModal = this.handleHideResultModal.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.pageId) {\r\n      this.unsubscribe = this.props.firebase.db\r\n      .collection(\"pages\")\r\n      .doc(this.props.pageId)\r\n      .onSnapshot(doc => {\r\n        if (doc.exists) {\r\n          this.setState({\r\n            isLoading: false,\r\n            page: doc.data(),\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n          })\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n      (!this.state.page ?\r\n        <NotFoundView />\r\n        :\r\n        <Fragment>\r\n          <Row>\r\n            <Col xs={12} sm={6}>\r\n              <h1>{this.state.page.name}</h1>\r\n            </Col>\r\n            {this.props.authUser && this.props.authUser.uid === this.state.page.author_uid && <Col xs={12} sm={6}>\r\n              <div className=\"top-right-button\">\r\n                <Button onClick={this.handleEdit}>Edit Page</Button>\r\n              </div>\r\n            </Col>\r\n            }\r\n          </Row>\r\n          <Row className=\"view-tables\">\r\n            <Col>\r\n              {this.state.page.tables && this.state.page.tables.map(table => {\r\n                return (\r\n                  <Card key={table.id}>\r\n                    <Card.Body>\r\n                      <RollTable\r\n                        handleRoll={this.handleRoll}\r\n                        table={table}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n\r\n                );\r\n              })}\r\n            </Col>\r\n          </Row>\r\n          {\r\n                    <ResultModal\r\n                        result={this.state.result}\r\n                        show={this.state.showResultModal}\r\n                        onHide={this.handleHideResultModal}\r\n                    />\r\n          }\r\n        </Fragment>)\r\n    );\r\n  }\r\n\r\n  handleRoll(tableId) {\r\n    const result = rollTable(tableId, this.state.page);\r\n    this.setState({\r\n      result: result,\r\n      showResultModal: true,\r\n    });\r\n  }\r\n\r\n  handleEdit() {\r\n    this.props.history.push(\"/edit/\" + this.props.pageId);\r\n  }\r\n\r\n  handleHideResultModal(){\r\n    this.setState({\r\n      showResultModal: false,\r\n    })\r\n  }\r\n}\r\n\r\nexport default withRouter(View);\r\n","import {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './index.css';\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            this.props.firebase.LoginScreen()\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport \"./index.css\";\r\n\r\nclass Pages extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pages: null,\r\n        }\r\n\r\n        this.handleCreatePage = this.handleCreatePage.bind(this);\r\n        this.handleImportPage = this.handleImportPage.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.pages && (\r\n                        <Fragment>\r\n                            <Row className=\"center\">\r\n                                <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                                    <h1>Your Pages</h1>\r\n                                    <div className=\"list-group\">\r\n                                        {this.state.pages.map(page => {\r\n                                            return (\r\n                                                <Link\r\n                                                    key={page.id}\r\n                                                    to={\"/view/\" + page.id}\r\n                                                    className=\"list-group-item list-group-item-action\"\r\n                                                >\r\n                                                    {page.name}\r\n                                                </Link>\r\n                                            );\r\n                                        })\r\n                                        }\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"center pages-button-row\">\r\n                                <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                                    <Button onClick={this.handleCreatePage}>Create Page</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"center pages-button-row\">\r\n                                <Col sm={{ span: 6, offset: 3 }} md={{ span: 4, offset: 4 }}>\r\n                                    <div>\r\n                                        <label htmlFor=\"customFile\">\r\n                                            <div className=\"btn btn-primary\">\r\n                                                Import Page\r\n                                            </div>\r\n                                        </label>\r\n                                        <input type=\"file\" accept=\"application/json\" hidden id=\"customFile\" onChange={this.handleImportPage} />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.authUser) {\r\n            this.unsubscribe = this.props.firebase.db\r\n                .collection(\"pages\")\r\n                .where(\"author_uid\", \"==\", this.props.authUser.uid)\r\n                .onSnapshot(snapshot => {\r\n                    const pages = [];\r\n                    snapshot.forEach(data => {\r\n                        pages.push({ ...data.data(), id: data.id });\r\n                    });\r\n                    pages.sort((a, b) => a.created_at < b.created_at ? 1 : -1);\r\n                    this.setState({\r\n                        pages\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribe();\r\n    }\r\n\r\n    handleCreatePage() {\r\n        this.props.history.push(\"/create\");\r\n    }\r\n\r\n    handleImportPage(e) {\r\n        const fileList = e.target.files;\r\n        if (fileList.length > 0) {\r\n            const file = fileList[0];\r\n            var reader = new FileReader();\r\n            reader.readAsText(file);\r\n            reader.onload = (e) => {\r\n                const jsonString = e.target.result;\r\n                const page = JSON.parse(jsonString);\r\n                this.props.onImportPage(page);\r\n                this.props.history.push(\"/import\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Pages);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport Editor from \"./Editor\";\nimport View from \"./View\";\nimport Login from './Login';\nimport Pages from './Pages';\nimport { NotFoundView } from './NotFoundView';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userSet: false,\n      authUser: null,\n      importPage: null,\n    };\n\n    this.Home = this.Home.bind(this);\n    this.Login = this.Login.bind(this);\n    this.Pages = this.Pages.bind(this);\n    this.Create = this.Create.bind(this);\n    this.Edit = this.Edit.bind(this);\n    this.View = this.View.bind(this);\n    this.Import = this.Import.bind(this);\n    this.handleImportPage = this.handleImportPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.firebase.auth.onAuthStateChanged(authUser => {\n      authUser\n        ? this.setState({ authUser, userSet: true })\n        : this.setState({ authUser: null, userSet: true });\n    });\n  }\n\n  render() {\n    return this.state.userSet && (\n      <Router>\n        <Navigation firebase={this.props.firebase} authUser={this.state.authUser} />\n        <Container fluid>\n          <Row>\n            <Col>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Switch>\n                <Route exact path=\"/\" component={this.Home} />\n                <Route exact path=\"/login\" component={this.Login} />\n                <this.PrivateRoute path=\"/pages\" component={this.Pages} />\n                <this.PrivateRoute path=\"/create\" component={this.Create} />\n                <this.PrivateRoute path=\"/import\" component={this.Import} />\n                <this.PrivateRoute path=\"/edit/:pageId\" component={this.Edit} />\n                <Route path=\"/view/:pageId\" component={this.View} />\n                <Route component={NotFoundView} />\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n    );\n  }\n\n  Home() {\n    return (\n      <Home firebase={this.props.firebase} authUser={this.state.authUser} />\n    )\n  }\n\n  Login() {\n    return (\n      <Login firebase={this.props.firebase} />\n    )\n  }\n\n  Pages() {\n    return (\n      <Pages firebase={this.props.firebase} authUser={this.state.authUser} onImportPage={this.handleImportPage}/>\n    );\n  }\n\n  Create() {\n    return (\n      <Editor \n        firebase={this.props.firebase}\n        authUser={this.state.authUser}\n      />\n    );\n  }\n\n  Import() {\n    if(this.state.importPage) {\n      return (\n        <Editor \n          firebase={this.props.firebase}\n          authUser={this.state.authUser}\n          importPage={this.state.importPage}\n        />\n      );\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  }\n\n  Edit({ match }) {\n    return (\n      <Editor\n        firebase={this.props.firebase}\n        authUser={this.state.authUser}\n        pageId={match.params.pageId}\n      />\n    );\n  }\n\n  View({ match }) {\n    return (\n      <View\n        firebase={this.props.firebase}\n        authUser={this.state.authUser}\n        pageId={match.params.pageId}\n      />\n    );\n  }\n\n  PrivateRoute = ({ component: Component, ...rest }) => (\n    this.state.userSet &&\n    <Route {...rest} render={(props) => (\n      this.state.authUser\n        ? <Component {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n    )} />\n  );\n\n  handleImportPage(page){\n    this.setState({\n      importPage: page\n    });\n  }\n}\n","import firebase from 'firebase';\r\nimport {StyledFirebaseAuth} from 'react-firebaseui';\r\n\r\nimport React from 'react';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDm_aiHYiZQc4ypOHIwywQ3J8JFPMRWbrk\",\r\n  authDomain: \"rolltable.firebaseapp.com\",\r\n  databaseURL: \"https://rolltable.firebaseio.com\",\r\n  projectId: \"rolltable\",\r\n  storageBucket: \"rolltable.appspot.com\",\r\n  messagingSenderId: \"404433756558\"\r\n};\r\n\r\nconst uiConfig = ({\r\n  signInSuccessUrl: '/rolltables/#/pages',\r\n  signInOptions: [\r\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n  ],\r\n});\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    firebase.initializeApp(config);\r\n    this.auth = firebase.auth();\r\n    this.db = firebase.firestore();\r\n    this.serverTimestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  LoginScreen = (props) => <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={this.auth} />\r\n}\r\n\r\nexport const FirebaseContext = React.createContext(null);\r\n\r\nexport default Firebase;","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport Firebase, {FirebaseContext} from './firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <FirebaseContext.Consumer>\n            {\n                firebase => <App firebase={firebase} />\n            }   \n        </FirebaseContext.Consumer>\n    </FirebaseContext.Provider>\n,\ndocument.getElementById(\"root\"));\n"],"sourceRoot":""}